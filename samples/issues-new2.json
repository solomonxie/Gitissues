[
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "## 目前是操作Github API获取自己的repo和issues数据，然后还会研究bitbucket等各种各样的网站API",
    "closed_at": null,
    "comments": 5,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/42/comments",
    "created_at": "2018-02-05T09:55:01Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/42/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/42",
    "id": 294332309,
    "labels": [
      {
        "color": "c5def5",
        "default": false,
        "id": 817021069,
        "name": "Network",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Network"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/42/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-19T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 42,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "API 数据操作实践",
    "updated_at": "2019-02-19T05:47:34Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/42",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "> Better to have a place like here to say something randomly, with no restrictions and no worries.",
    "closed_at": null,
    "comments": 8,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/39/comments",
    "created_at": "2018-02-02T14:51:53Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/39/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/39",
    "id": 293913142,
    "labels": [
      {
        "color": "bfd4f2",
        "default": false,
        "id": 270968623,
        "name": "Blog",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Blog"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/39/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 39,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Tweets",
    "updated_at": "2018-02-09T05:47:50Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/39",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "> By having a wild thought on start a career on Artificial intelligence, started today to do a tiny research on how to study AI. It turns out it consist of a shit black hole of knowledges, which means I have to study all of those things, not mention even some basic terms are causing a headache to me, such like Machine Learning, Deep Learning, Data Mining, Big Data, Classification etc etc. Thus I tend to write down some notes and random thoughts here helping me to organise it better. Saying, a tiny pen is better than a great brain.",
    "closed_at": null,
    "comments": 7,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/38/comments",
    "created_at": "2018-02-01T17:38:42Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/38/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/38",
    "id": 293621467,
    "labels": [
      {
        "color": "1d76db",
        "default": false,
        "id": 823984781,
        "name": "AI",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/AI"
      },
      {
        "color": "bfd4f2",
        "default": false,
        "id": 270968623,
        "name": "Blog",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Blog"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/38/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 38,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Machine Learning note and diary",
    "updated_at": "2018-09-09T05:47:55Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/38",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "> 记录Javascript的基本语法和常用技巧，以及扩展库等等。",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/37/comments",
    "created_at": "2018-01-29T09:26:22Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/37/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/37",
    "id": 292336125,
    "labels": [
      {
        "color": "c2e0c6",
        "default": false,
        "id": 831923598,
        "name": "Javascript",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Javascript"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/37/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 37,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Javascript 编码细节技巧",
    "updated_at": "2018-02-09T05:48:01Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/37",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "> 主要记录点css的语法和技巧",
    "closed_at": null,
    "comments": 2,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/36/comments",
    "created_at": "2018-01-29T09:13:12Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/36/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/36",
    "id": 292332416,
    "labels": [
      {
        "color": "bcd9f4",
        "default": false,
        "id": 817033078,
        "name": "Web Dev",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Web%20Dev"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/36/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 36,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "CSS 外观经验",
    "updated_at": "2018-02-09T05:48:05Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/36",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "> 日常的网络问题层出不穷，实在太多有点记忆不够用，在这里开一篇再好不过，随时查阅。\r\n另外，基础的网络学习也一起放在这吧",
    "closed_at": null,
    "comments": 8,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35/comments",
    "created_at": "2018-01-26T04:28:54Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/35",
    "id": 291797179,
    "labels": [
      {
        "color": "c2e0c6",
        "default": false,
        "id": 817021639,
        "name": "Cisco",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Cisco"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 817021069,
        "name": "Network",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Network"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 35,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Network Engineering and Troubleshooting",
    "updated_at": "2018-02-09T13:55:46Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/35",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "> Wordpress实在是太好用，就连鄙视PHP的人也不能说Wordpress不好。作为纯傻瓜式Web应用框架来说，Wordpress实在是让我这个小白从零开始做了一套完整的企业前后台网站。不能不在这里记录一些经验以供使用。",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/34/comments",
    "created_at": "2018-01-25T19:42:43Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/34/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/34",
    "id": 291691602,
    "labels": [
      {
        "color": "bcd9f4",
        "default": false,
        "id": 817033078,
        "name": "Web Dev",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Web%20Dev"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/34/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 34,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Wordpress 实操经验",
    "updated_at": "2018-02-09T05:48:14Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/34",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "> Linux日常操作实在需要解决的问题太多了，在这里记录点滴再合适不过了。\r\n其它Unix类（包括Mac中与此相关都）也都在这里。\r\n与命令行学习有区分，这里只是针对Linux系统而言，即使有一些命令的运用但也只是针对某发行版或某种只在Linux上才会出现的问题",
    "closed_at": null,
    "comments": 4,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/33/comments",
    "created_at": "2018-01-25T19:30:09Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/33/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/33",
    "id": 291687904,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "id": 290633404,
        "name": "Linux",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Linux"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/33/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 33,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Linux 操作杂疑症状",
    "updated_at": "2018-02-09T05:48:17Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/33",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "> Amazon Web Services是个真心强大靠谱的真·云服务器。只是玩好了它都可以被人敬仰，可是却真的不很容易配置，服务也太多。所以在这里开一篇，以供随时记录解决方案和发掘过程。\r\n另外，附带性的会有一些DigitalOcean等的其它服务商方案。",
    "closed_at": null,
    "comments": 11,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/31/comments",
    "created_at": "2018-01-25T18:57:52Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/31/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/31",
    "id": 291678399,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "id": 290633404,
        "name": "Linux",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Linux"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/31/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 31,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "AWS为首的云服务器实战钻研",
    "updated_at": "2018-02-09T14:39:32Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/31",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "> 如果涉及一些前端如HTML, css的话，说实话vim真的心有余力不足。\\\r\n就算有人说vim也可以做到而且可以做到更快，但是那就像用千斤重大刀去削苹果皮一样，可以做到，练到出神入化的地步也可以做到更好，\r\n但是——没必要！明明有个超好用的小刀，焉用牛刀呢？",
    "closed_at": null,
    "comments": 7,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/30/comments",
    "created_at": "2018-01-25T10:11:18Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/30/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/30",
    "id": 291515253,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 817011387,
        "name": "IDE",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/IDE"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/30/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 30,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Sublime Text 为首的各种IDE使用技巧",
    "updated_at": "2018-02-09T05:48:25Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/30",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "## 主要记录Git从零开始学习的一些常用流程和指令 ",
    "closed_at": null,
    "comments": 15,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/29/comments",
    "created_at": "2018-01-25T06:55:21Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/29/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/29",
    "id": 291468663,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "id": 817012398,
        "name": "Git",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Git"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/29/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 29,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Git 及所有相关学习",
    "updated_at": "2018-02-10T11:09:43Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/29",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "## 积累终端命令行相关经验，包括Shell中的bash,zsh，终端中的Terminal, Mac Terminal.app,iTerm等\r\n\r\n注意：这里说linux，linux之类的，其实在mac中也ok。只不过说起来和搜索起来方便而已。",
    "closed_at": null,
    "comments": 16,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/27/comments",
    "created_at": "2018-01-23T04:46:57Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/27/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/27",
    "id": 290708033,
    "labels": [
      {
        "color": "fbca04",
        "default": false,
        "id": 290633404,
        "name": "Linux",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Linux"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/27/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 27,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Shells 命令行终端操作积累",
    "updated_at": "2018-02-10T15:46:11Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/27",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "## 记录学习树莓派过程中遇到的各种问题及解决方案",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/26/comments",
    "created_at": "2018-01-22T16:00:03Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/26/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/26",
    "id": 290517584,
    "labels": [
      {
        "color": "fef2c0",
        "default": false,
        "id": 812839888,
        "name": "Raspberry Pi",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Raspberry%20Pi"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/26/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 26,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Raspberry Pi 疑难杂症",
    "updated_at": "2018-02-09T05:48:38Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/26",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "## 学vim的笔记。觉得这样历程型的笔记再好不过了。\r\n\r\n### Text editors learning curves\r\n![image](https://user-images.githubusercontent.com/14041622/36091285-3ec383bc-101e-11e8-82e6-4e1e785142fc.png)\r\n",
    "closed_at": null,
    "comments": 20,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/25/comments",
    "created_at": "2018-01-22T10:48:44Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/25/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/25",
    "id": 290421983,
    "labels": [
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      },
      {
        "color": "6fdb6f",
        "default": false,
        "id": 812500268,
        "name": "Vim",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Vim"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/25/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 25,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Vim成长之路",
    "updated_at": "2018-02-12T09:58:41Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/25",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "## 这种方式记笔记可能会很轻松，开篇试试吧",
    "closed_at": null,
    "comments": 22,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/24/comments",
    "created_at": "2018-01-22T06:41:23Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/24/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/24",
    "id": 290364920,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/24/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 24,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Python学习笔记",
    "updated_at": "2018-02-12T12:44:26Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/24",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "和Mac疑难杂症相通，主要在这里记录Chrome浏览器操作日常中的问题和经验",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/23/comments",
    "created_at": "2018-01-22T06:39:55Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/23/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/23",
    "id": 290364725,
    "labels": [
      {
        "color": "fef2c0",
        "default": false,
        "id": 812280897,
        "name": "Chrome",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Chrome"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/23/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 23,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Chrome浏览器疑难杂症",
    "updated_at": "2018-02-09T05:45:57Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/23",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "### 开篇，打算利用这种方法总结所有Mac上遇到的问题。作为life-time总集，每一条评论作为一个问题和解答。",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/22/comments",
    "created_at": "2018-01-22T06:13:07Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/22/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/22",
    "id": 290360608,
    "labels": [
      {
        "color": "e094db",
        "default": false,
        "id": 812263494,
        "name": "Mac",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Mac"
      },
      {
        "color": "c5def5",
        "default": false,
        "id": 831921770,
        "name": "Top-notes",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Top-notes"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/22/labels{/name}",
    "locked": false,
    "milestone": {
      "closed_at": null,
      "closed_issues": 0,
      "created_at": "2018-01-22T12:38:50Z",
      "creator": {
        "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
        "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
        "followers_url": "https://api.github.com/users/solomonxie/followers",
        "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
        "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/solomonxie",
        "id": 14041622,
        "login": "solomonxie",
        "organizations_url": "https://api.github.com/users/solomonxie/orgs",
        "received_events_url": "https://api.github.com/users/solomonxie/received_events",
        "repos_url": "https://api.github.com/users/solomonxie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/solomonxie"
      },
      "description": "Most recently or most frequently notes",
      "due_on": null,
      "html_url": "https://github.com/solomonxie/solomonxie.github.io/milestone/2",
      "id": 3053599,
      "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2/labels",
      "number": 2,
      "open_issues": 18,
      "state": "open",
      "title": "TOP NOTES",
      "updated_at": "2018-02-09T05:48:38Z",
      "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/milestones/2"
    },
    "number": 22,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Mac系统操作疑难杂症",
    "updated_at": "2018-02-09T04:49:28Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/22",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "> 声明下：不同于网络上千百篇方法，下文是经过各种严格测试都通过的，同时也是一个实验的过程，排除了各种不靠谱的方法。有需要的可以评论来讨论，想要源码和相关参考文献或笔记的，也可以找我。\n## 思路及启发\n\n先说一下我这一路实验的思路吧，这个至关重要。\n之前一直在用Python做爬虫抓取数据，发现本机IP的问题不解决，爬虫相当于白费了。然后各种百度，不管是用urllib2还是requests的代理设置，都不管用。然后又各种搜索Python更改windows代理的设置，还需要接触windos底层API，有复杂又不好实现。于是爬虫的学习就放弃了好长一段时间。\n最近因为一直在用`AutoHotkey`大大加快电脑操作效率，各种快捷键和代替手动操作一些常规系统设置。突发奇想，想让它自动打开IE的Internet设置，然后自动点击“局域网设置”，在自动在代理框里输入IP地址，按回车完成设置。这真是个好主意~\n不过失败了。。。因为AHK在IE设置弹出的框框中选择某一个输入框，很麻烦，我也没法实现。所以就在想另一个办法，因为AHK操作Windows的cmd命令很方便，所以在想能不能用它打开cmd然后用命令设置IE呢？\n然后又各种百度。发现这是可以通过`reg add`注册表设置来实现的！于是，就开启了`reg`命令的百度之旅。\n按照网上各种方法，都指向了注册表的这个地方:\n`HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings`\n大家都说在这个路径下，有这么3个项非常重要：\n- `ProxyEnable` - 使用代理\n- `ProxyServer` - 代理IP的地址及端口号\n- `AutoConfigURL` - 自动配置脚本（PAC）的地址\n  于是试着用`reg add`命令操作：\n\n```\nreg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" /v ProxyEnable /tREG_DWORD /d 1 /f\nreg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" /v ProxyServer /d\"192.168.1.1:8080\" /f\n```\n\n这两句第一个是打开“代理”，第二个是设置代理的IP地址。\n先在命令行里敲了下命令，然后打开`regedit`注册表，刷新下看，还真改了！\n然后手动打开IE设置，发现里面的内容也确实改变了。然后再打开浏览器，打开IP查询的网址，自己的IP真的变了！\n至此以为大功告成了。结果再用时，发现大错特错——\n再次用命令行改我指定的IP地址后，网页打不开了。。。\n来回反复调试查错之后，我发现一个“大秘密”：如果不手动打开IE设置里的局域网设置窗口的话，所有代理设置是不生效的。这是为什么呢？\n百度里搜索不到。\n于是我就用英文到Stackoverflow去搜，结果发现实际影响本机代理的注册表项目并不是之前的那几个！（真怀疑网上那些人说自己用这个项达到定时设置代理的人是不是玩真的。。。）\n而是这个位置的项：\n`HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections`\n其中的`DefaultConnectionSettings`才是真正需要改的东西。打开以后各种乱码，原来是二进制值。\n不过用编辑器看二进制值，确实发现代理IP地址和自动配置脚本的地址都在里面。\n那怎么办呢？AHK可不会操作二进制，也没什么方法能用`reg add`命令行直接把二进制值注入。\n然后又进入无尽的百度模式。\n## 注册表的二进制项修改方式的突发奇想\n\n忘了什么启发的我吧，好像是自己无聊到在注册表上乱点，发现我刻意导出注册表。\n然后导出了下试试，发现是个.reg文件。然后无聊双击一下，发现可以把这个文件导入到注册表！\n于是灵光一闪，赶紧用文本编辑器打开这个.reg文件，发现里面是文字画的十六进制码，类似这样的：\n\n```\nWindows Registry Editor Version 5.00\n[HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections]\n\"DefaultConnectionSettings\"=hex:46,00,00,00,03,00,00,00,07,00,00,00,0e,00,00,\\\n 00,31,39,32,2e,31,36,38,2e,31,2e,31,3a,38,30,00,00,00,00,21,00,00,00,68,74,\\\n 74,70,3a,2f,2f,78,64,75,6f,74,61,69,2e,63,6f,6d,2f,70,52,73,4f,33,4e,47,52,\\\n 33,2d,2e,70,61,63,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,\\\n  00,00,00,00,00,00,00,00,00,00,00,00,00\n\"SavedLegacySettings\"=hex:46,00,00,00,c1,0c,00,00,07,00,00,00,0e,00,00,00,31,\\\n 39,32,2e,31,36,38,2e,31,2e,31,3a,38,30,00,00,00,00,21,00,00,00,68,74,74,70,\\\n 3a,2f,2f,78,64,75,6f,74,61,69,2e,63,6f,6d,2f,70,52,73,4f,33,4e,47,52,33,2d,\\\n 2e,70,61,63,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,\\\n  00,00,00,00,00,00,00,00,00,00,00\n```\n### 于是最终答案就出来了（这里开始有Python介入）\n\n这个时候我还不知道这是正确答案，只是想试一试：\n用Python组成一段有效的二进制码（其实是十六进制） -> 把注册表值封装为reg文件 -> 通过命令行的`reg import`命令导入reg文件 -> 成功！\n然后问题就在于怎么安装正确的格式组成\n## DefaultConnectionSettings十六进制值的分析\n\n于是继续到Stackoverflow上搜索`DefaultConnectionSettings`这个项中十六进制的读取问题。\n发现有一个人大概总结了每一位字节是代表什么，不过不够详细。地址在这里【[How to set 'automatic configuration script' for a dial-up connection programmatically?](http://stackoverflow.com/questions/1564627/how-to-set-automatic-configuration-script-for-a-dial-up-connection-programmati)】\n然后开始做笔记：\n![How to set 'automatic configuration script' for a dial-up connection programmatically?](http://upload-images.jianshu.io/upload_images/841144-318a77735b01c8cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n接着开始尝试对照着那段二进制值看一看。于是我把这段十六进制码做成PDF，方便做笔记，大概是这样的：\n![_Windows代理设置注册表值的十六进制分析DefaultConnectionSettings](http://upload-images.jianshu.io/upload_images/841144-4db9a3ef5fb665de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n实际的十六进制值果然和网上的不同。经过实验，后面一大段画删除线的，都是没用的，删除也没关系。实际上，它只有在你手动打开IE设置面板时，才自动加上的。不管它，实际上有用的十六进制并不长。总结下也就这么几位：\n`46 00 00 00 00 00 00 00 开关 00 00 00 IP长度 00 00 00 IP地址 00 00 00 是否跳过本地代理 21 00 00 00 PAC地址`\n其中，通过规律发现每个信息的分隔符是三个00，即`00 00 00`。上面有7个00的，因为没什么用我就不讲了（其实第四个代表自增数，直接为00就好了）\n当然，其中汉字的部分是十六进制格式的。\n这几个汉字，是其中最重要的信息，具体如下：\n- 开关(switcher): 主要代表IE设置中复选框的选中情况，你可以打开IE设置看看。以下是所有可用的值（括号中是我用的别名）：\n  0F全部开启(ALL)；01全部禁用(Off)\n  03使用代理服务器(ProxyOnly)；05使用自动脚本(PacOnly)；\n  07使用脚本和代理(ProxyAndPac)；09打开自动检测设置(D)；\n  0B打开自动检测并使用代理(DIP)；0D打开自动检测并使用脚本(DS)；\n- IP长度：必须是十六进制的，0就是00，7就是07,10就是0a,11是0b。在Python中，格式是`0xa`，所以需要把格式统一为注册表的标准。\n- IP地址：直接把IP安装每个字符转十六进制就好了。如果IP为空的话，就直接为00。这时会看到switcher后面跟了11个00。。。\n- 是否跳过本地代理：这段有点复杂，实际上我们几乎不用。如果不用的话直接为00就好了。但是用的话，就必须写为：`附加信息长度00 00 00 附加信息`这样的。\n  - 附加信息：只能是这句话：`<local>`\n  - 附加信息长度：因为附加信息是固定的，所以共7位，写为07就好了。\n- PAC地址：这个简单，直接把PAC地址翻译为十六进制就好了。如果没有则什么都不写。\n\n至此这段十六进制值就全部解析完毕了。\n剩下的就是把你需要的代理IP地址和PAC地址作为参数传进去就好了。然后把这段值封装到reg文件中的对应位置就完全ok了~这步太简单，就不用多说了。\n## 增加更方便的功能\n\n各种测试成功后，非常高兴。但是还有点余味不足，就想着多添加点方便的功能。\n这个Python文件的最后成品可以做到这些事：\n- 直接通过命令行传参数达到各种设置代理的效果。这个很自豪~第一次用系统参数功能，哈哈哈！\n- 在文件夹中直接双击达到效果\n- 在别的Python文件中（如爬虫）作为模块被使用\n- 被AHK调用\n## 在Autohotkey中调用——极其方便极其傻瓜式操作！\n\n不忘初心嘛~\npython处理一切完成后，又回到了AHK中。\n这一步可能也就写了几分钟，让AHK直接带参数打开python脚本就做到了。比如设置一个代理IP地址：\n\n``` Autohotkey\npath = \"D:\\setRegProxy.py\" ;这里是python脚本的地址，随便放哪都行。\nkey   = \"0.0.0.0:80\"  ;这里根据需要设置为代理地址\nRun % path \" -o ProxyOnly \" key\n```\n\n这样就齐活了~\n当然，我的AHK脚本实现的功能比这个还要爽快——弹出一个小输入框，直接粘贴一个ip地址，按回车就能实现代理设置。\n## Python脚本的源码(setProxy.py)\n\n只要机器上安装了Python 2.x版本就行，不需要依赖安装和设置其他任何东西。\n\n``` python\n# coding:utf-8\n'''\n  # Title   : setRegProxy\n  # Author  : Solomon Xie\n  # Utility : Via Registry key of windows, change proxy settings of IE on Windows.\n  # Require : Python 2.x, Windows 7\n  # Reg Path: HKUC\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections\n  # Anlysis : 注册表的二进制值(及关键信息)如下：\"46 00 00 00 00 00 00 00 开关 00 00 00 IP长度 00 00 00 IP地址 00 00 00 是否跳过本地代理 21 00 00 00 PAC地址\"\n  # Method  : 通过在cmd中导入reg文件的方式执行并立即生效。\n  # Notes   : - 二进制值的设置选项在代码中已经体现了。本代码可以根据需要自动设置代理。\n  # switcher: 开关：0F全部开启(ALL)；01全部禁用(Off)\n              03使用代理服务器(ProxyOnly)；05使用自动脚本(PacOnly)；\n              07使用脚本和代理(ProxyAndPac)；09自动检测设置(D)；\n              0B自动检测并使用代理(DIP)；0D自动检测并使用脚本(DS)；\n'''\nimport os, sys, re, getopt\n\ndef regIESettings(op, noLocal=False, ip='', pac=''):\n  '''\n    # 根据需求生成Windows代理设置注册表的.reg文件内容\n    # DefaultConnectionSettings项是二进制项\n    # 而具体这个二进制文件怎么解析，在收藏的PDF中有详细解释。\n  '''\n  if not op : return\n  # 如果是设置IP代理的模式 则检查IP地址的有效性(允许为空，但不允许格式错误)\n  if 'Proxy' in op and not ip == '': \n    # if len(extractIp(ip))==0\n    if 1 > len(re.findall('([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})\\s*:{0,1}\\s*([0-9]{1,5}){0,1}',ip)) :\n      print '---Unexpected IP Address:%s---'%ip\n      return\n  options = {'On':'0F','Off':'01','ProxyOnly':'03','PacOnly':'05','ProxyAndPac':'07','D':'09','DIP':'0B','DS':'0D'}\n  if op == 'Off':\n    reg_value = '46,00,00,00,00,00,00,00,01'\n  else:\n    switcher = options.get(op)\n    if not switcher:\n      print '\\n---Unexpected Option. Please check the value after [-o]---\\n'\n      return\n    skipLocal = '07,00,00,00,%s'%__toHex('<local>') if noLocal else '00'\n    reg_value = '46,00,00,00,00,00,00,00,%(switcher)s,00,00,00,%(ipLen)s,00,00,00,%(ip)s00,00,00,%(skipLocal)s,21,00,00,00%(pac)s' % ({ 'switcher':switcher,'ipLen':__toHex(len(ip)),'ip':__toHex(ip)+',' if ip else '','infoLen':__toHex(len('<local>')),'skipLocal':skipLocal,'pac':','+__toHex(pac) if pac else '' })\n  settings = 'Windows Registry Editor Version 5.00\\n[HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections]\\n\"DefaultConnectionSettings\"=hex:%s' % reg_value\n  # print 'Using proxy address: %s' % ip\n  print op, ip, pac\n  print options[op] +'\\n'+ __toHex(ip) +'\\n'+ __toHex(pac)\n  print settings\n  # === 生成reg文件并导入到注册表中 ===\n  filePath = '%s\\DefaultConnectionSettings.reg'%os.getcwd() \n  with open(filePath, 'w') as f:\n    f.write( settings )\n  cmd = 'reg import \"%s\"' %filePath\n  result  = os.popen(cmd)\n  if len(result.readlines()) < 2 :\n    print '---Successfully import proxy into Registry on this machine.---'\n  return \n\ndef __toHex(obj):\n  if   obj == '': return ''\n  elif obj == 0 or obj == '0' or obj == '00': return '00'\n  if isinstance(obj, str):\n    rehex = [str(hex(ord(s))).replace('0x','') for s in obj]\n    return ','.join(rehex)\n  elif isinstance(obj, int):\n    num = str(hex(obj)).replace('0x', '')\n    return num if len(num)>1 else '0'+num # 如果是一位数则自动补上0，7为07，e为0e\n\nif __name__ == '__main__':\n  # 获取文件外部参数\n  # 用法：在命令行中输入setRegProxy.py -o \"ProxyOnly\" -l --proxy\"0.0.0.0:80\" -l\n  opts, args = getopt.getopt(sys.argv[1:], 'o:p:a:l',['option=','proxy=','pac=','local'])\n  print opts, args #调试用\n  if len(opts) > 0:\n    op, ip, pac = '', '', ''\n    noLocal = False\n    for o,a in opts:\n      if   o == '-o' or o == '--option':  op = a\n      elif o == '-p' or o == '--proxy' :  ip = a\n      elif o == '-a' or o == '--pac'   : pac = a\n      elif o == '-l' or o == '--local' : noLocal = False\n    pac = 'http://xduotai.com/pRsO3NGR3-.pac' if not pac else pac\n    if op == 'ProxyOff':\n      regIESettings(op='Off', ip=ip, pac=pac, noLocal=noLocal)\n      regIESettings(op='PacOnly', ip=ip, pac=pac, noLocal=noLocal)\n    elif op == 'PacOff':\n      regIESettings(op='Off', ip=ip, pac=pac, noLocal=noLocal)\n      regIESettings(op='ProxyOnly', ip=ip, pac=pac, noLocal=noLocal)\n    else:\n      regIESettings(op=op, ip=ip, pac=pac, noLocal=noLocal)\n```\n## Autohotkey源码\n\nAutohotkey怎么用呢？太简单了，傻到爆！\n直接官网下载安装一个Autohotkey软件，也就几M。然后呢，新建一个文本文件，把下面内容粘贴进去。把文件名后缀改为`.ahk`，然后双击就启动了脚本哈哈！\n这时你试着按一下键盘上的ScrollLock键，就会弹出来一个对话框。效果是这样的：\n![按下ScrollLock键后弹出的框框](http://upload-images.jianshu.io/upload_images/841144-721fa232d2bce823.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n你可以在这里输入改代理的命令~ 我设计的命令都非常简单，如下：\n- 输入`proxy`，就会打开IE设置的窗口\n- 输入`proxy 192.168.1.1:8080` ，就会把代理设置为这个IP\n- 输入`proxy on`，就会打开代理（但是IP为空）\n- 输入`proxy off`，就会关闭代理\n- 输入`pac http://abc.com/123.pac`，就开启某自动代理设置脚本\n- 输入`pac off`，就会关闭自动脚本\n\n![输入指令的样子](http://upload-images.jianshu.io/upload_images/841144-47b6ad9c5753f387.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n注意：\n1. 我这里注册的键是键盘上的ScrollLock按钮，按一下就有了。也可以自己设定一个。\n2. 下面的代码是处理过的，实际上这个按键远比它要方便的多：它是我的快速操作杀手锏，一条命令实现巨多功能。如有感兴趣的可以联系我讨论，或者看我的下一篇专门针对AHK的文章（如果我不犯懒写了的话）。\n3. 我设定的指令是`proxy ??`这样的，如果嫌长或者不方便，可以改为别的自己用着舒服的。甚至不用弹出框，直接按一下F1之类的就完成设置都可以。不过这就需要稍微了解下AHK语法啦~（也不难）\n\n``` Autohotkey\nScrollLock:: \n{\n    ; --- 获取指令及关键词 ---\n    InputBox, fullCommand, (Command Line Interface), Please give me a command:, , 600, 130 ;获取命令\n    if (fullcommand = \"\")\n        Return\n    ; -- 解析命令 ---\n    split  := \" \" \n    StringGetPos , posi, fullCommand, %split%\n    if (posi > 0) {\n        StringMid, eng, fullCommand, 0 , posi ;\n        StringMid, key, fullCommand, posi+2 , StrLen(fullCommand)\n    }\n    else {\n        eng := fullCommand\n        key := \"\"\n    }\n        ; === 打开IE设置窗口的命令 ===\n        ieSettings := \"rundll32.exe shell32.dll, Control_RunDLL inetcpl.cpl, ,4L\"\n        ; === python脚本的地址 ===\n    path  := \"D:\\Solomon Xie\\Workspace\\setRegProxy.py\" ;Python设置代理脚本，可接收命令行参数\n    ; ---开始执行操作---\n    if      (eng = \"\" and fullcommand != \"\")\n        Run % ieSettings\n    else if (eng = \"Proxy\"){\n        if (key = \"\")\n            Return\n        else if (key = \"Off\")\n            Run % path \" -o Off \"\n        else{\n            if (key = \"On\")\n                key := \"\" ;“获取”历史IP值太麻烦 先为空吧\n            else\n                key = \"--proxy \" %key%\n            Run % path  \" -o ProxyOnly \" key\n        }\n    }\n    else if (eng = \"Pac\" and key != \"\") {\n        if (key = \"\" or key = \"On\")\n            key = \"http://xduotai.com/pRsO3NGR3-.pac\"\n        if (key = \"Off\")\n            Run % path  \" -o Off \"\n        else {\n            key = \"%key%\"\n            Run % path \" -o PacOnly --pac \" key\n        }\n    }\n    Return\n}\n```\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/21/comments",
    "created_at": "2016-01-15T11:11:26Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/21/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/21",
    "id": 126853114,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/21/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 21,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Windows上利用Python自动切换代理IP的终极方案！",
    "updated_at": "2018-01-22T06:42:37Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/21",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "又说一遍了，python要想玩转，通古至今的计算机编码史先要精通。上一篇文章《Python中文字符的理解：str()、repr()、print》尽量拆分研究了一下python对字符串的基本处理。这里稍微提升下，开始研究一下python中基本的字符编码异同。\n## 先来聊聊万国码：unicode\n\n`万国码unicode`可以被看作当今世界所有文字的统一编码。作为一种基石，不管是什么字只要是保存为unicode就不会错。如果出错，那也只是你选择用什么编码把unicode翻译过来造成的。\n根据维基百科，一个字的unicode的基本表现形式为`“U+”然后紧接着一组十六进制的数字`，也就是`U+hhhh`，其中每一个h代表一个**十六进制**数字。如：`U+4f60`代表中文的'你'，在python里会显示成`u'\\u4f60'`。最前面的'前的u代表后面这串文字是unicode，而`\\u`就是`U+`了，后面的十六进制编码4f60是一样的。\n（坑爹的百度百科，竟然说unicode是二进制，其实UTF才会有二进制-_-）\n\n虽然世界上每个字都有唯一的一个unicode，但是它还分为**编码方式**和**实现方式**。这也就是搞晕python编码的万恶之源了。\n编码方式刚才讲了，就是`U+hhhh`，可实现方式就复杂了：不同操作系统、不同国家的实现方式还都不同。\n维基百科中说：\n\n> Unicode的实现方式不同于编码方式。一个字符的Unicode编码是确定的。但是在实际传输过程中，由于不同系统平台的设计不一定一致，以及出于节省空间的目的，对Unicode编码的实现方式有所不同。\n## 再来聊聊UTF-8\n\n前面说到，unicode的实现方式是在哪都不一样的。这个时候，著名的UTF就出现了：Unicode的实现方式称为**Unicode转换格式**（Unicode Transformation Format，简称为**UTF**）\n而UTF-8就是unicode实现方式中的一种。\n说“实现方式”其实就是“存储方式”\nUTF-8其实仍是一个unicode！仍是一个unicode！仍是一个unicode！重要的话说三遍。\n起初我的印象里unicode、utf-8、gb2312、ansi之流，区别好像只是一个字的不同翻译语言罢了。其实大错！\nUnicode是万国码，utf-8只是unicode的一种实现方式，而gb2312与gbk是中国码，与unicode同级！\n也就是说，**当我们在讨论UTF-8时候，我们是在讨论Unicode**。\n所以当我在维基百科看到这句时，我还以为unicode被新生代取缔了：\n\n> 互联网工程工作小组（IETF）要求所有互联网协议都必须支持UTF-8编码[1]。互联网邮件联盟（IMC）建议所有电子邮件软件都支持UTF-8编码。\n\n说回python来，这也就是为什么我不断换着法地把中文'你好'编译成utf-8输出都显示不出'你好'的原因——因为utf-8本来就显示不出中文来！这句话等同于unicode显示不出中文来。因为他们都只是代号。\n所以，要想显示出中文，就必须找到能把这些代码翻译成中文的“字典”。\n## 曾经那么亲切的GB2312\n\n其实真正用起来，能把unicode翻译出人能看懂的'你好'来的，就只有GB2312系列了。在国内搞工程的都知道，凡是什么前面加`GB`两字，那就是“国(Guo)标(Biao)”了。GB 2312的全称叫`中华人民共和国国家标准简体中文字符集`。\n同理GBK，它的全称叫`汉字内码扩展规范`。拼音就是“国(Guo)标(Biao)扩(Kuo)展”。这样就好理解了。GBK只是一本gb2312的扩展版本。\n凡人来理解的话，GB2312就是一个密码本，或者叫它一本字典。\n## python中字符串'你好'到底是什么格式呢？\n\npython中听到最多的就是，必须通通地用utf-8，这样万无一失。起初我以为，\"你好\"这样的中文，是一种utf-8格式的字符，其实大错特错！\n我们看到的中文，简单说可以归到gb2312或者gbk里面。\n而gb2312或gbk，其实就是一本字典，汉字字典。里面会告诉你`\\u0e24\\u0e43`这个代码，对应的是中文`你`字，`\\u0e1a\\u0e23`对应的是中文`好`字。\n听说utf-8也是一种编码，那它也是一本字典吗？对，它是字典，**但utf-8不是汉语字典！！**\n## 中文字符编码成unicode、utf8和gbk是什么样子呢？\n\n```\n>>> '你好'\n'\\xc4\\xe3\\xba\\xc3'\n>>> uni = '你好'.decode('gb2312')\n>>> uni\nu'\\u4f60\\u597d'\n>>> uni.encode('gb2312')\n```\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/20/comments",
    "created_at": "2015-12-20T16:17:14Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/20/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/20",
    "id": 123169867,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/20/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 20,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Python里中文编码的理解：unicode、utf-8、gbk",
    "updated_at": "2015-12-20T16:17:14Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/20",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "初试爬虫之后，各种快感。然后进入到Python练习的下一阶段了——把抓取到的数据存到数据库中。\n再三考虑，还是决定从MySQL开始入手。虽然评论区很多倾向于SQLite及MongoDB等新潮玩意，但是MySQL还是占有决定性的市场。为了适应以后生存，这方面必须得会，就拿它先练手吧。\n\n> 我的开发环境是中文win7系统32位， Python 2.7, MySQL 14.4。（Linux在虚拟机里呢，熟练之前先不挑战开发环境了-_-!）\n> 注意：这里是安装python的`mysqldb模块`，而不是mysql, 到了这一步它应该是已经安装好了的（包括`MySQL Server`和`MySQL python connector`）。\n\n**先检查自己是不是已经安装了这个模块**\n极其简单：在Python的命令行中输入`import MySQLdb`，如果没有报错，那就已经安装了。\n## 最简单的安装方法\n\n其实就是随便找个地方按下`win+R`，输入`cmd`回车——打开windows命令行，进行著名的`pip安装大法`：  \n\n> pip install mysql-python\n\n按理来说，这一步足够了。但是我这出现了据说在windows环境下python安装模块的痛：命令行里返回了错误：\n\n> error: Unable to find vcvarsall.bat\n\n然后我想到，是不是在windows用`pip`不太合适？所以还是循规蹈矩地到[Python官网下载](https://pypi.python.org/pypi/MySQL-python/1.2.5#downloads)了MySQLdb的_源文件_，即[MySQL-python-1.2.5.zip](https://pypi.python.org/packages/source/M/MySQL-python/MySQL-python-1.2.5.zip#md5=654f75b302db6ed8dc5a898c625e030c) ([md5](https://pypi.python.org/pypi?:action=show_md5&digest=654f75b302db6ed8dc5a898c625e030c))这个压缩包。\n随便找个地方解压缩，然后以最快的速度在cmd命令行中进入这个目录，输入：\n\n> python setup.py build\n> python setup.py install\n\n按理来说，到这一步就完全成功了。不过，返回的结果是一毛一样的。。。\n\n> error: Unable to find vcvarsall.bat\n\n然后我就知道了：其实`pip`安装，和我自己下载源码用`python setup.py build` 、 `python setup.py install`是一样的效果。\n问题源头还是在`vcvarsall.bat`这个东西上。一看文件名就知道是和vc相关。\n查询相关资料，说是[凡是安装和操作系统底层密切相关的Python扩展，几乎都会遇到这个错误。](http://blog.csdn.net/secretx/article/details/17472107)\n经过搜索，绝大多数的回答都是：需要安装`Microsoft Visual Studio`2008或者2010版本，才能满足Python在windows系统上安装各种底层扩展的需要。\n正在下载2G的VS中。。。\n**不过趁着下载等待时间，我在评论区发现了更easy的方法。。。。**\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-983620158389e66d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n打开页面，http://www.lfd.uci.edu/~gohlke/pythonlibs/ 是这个模样：\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-5af72a9ad43c8d84.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n满屏幕毫无美感的英文，连排版都没有，真有点不太好接受。不过趁着VS还没下载完，就简单读了读，发现了第二行关键词：`University of California, Irvine.`，原来是加大的作品啊，一看就是科学家制作，比较大气，耐着心读了读说明段落——好像是专门针对windows对python支持性差做的工作——把python扩展都制作成了**二进制文件**，即`.whl`文件。\n## 安装二进制的Python扩展包\n\n看起来好像是个好东西，就`ctrl+f`查找mysql，还真找到了！\n\n> MySQL-python, a Python database API 2.0 interface for the MySQL database\n> Mysqlclient is a Python 3 compatible fork of MySQL-python.\n> MySQL_python-1.2.5-cp27-none-win32.whl\n> MySQL_python-1.2.5-cp27-none-win_amd64.whl\n\n选择`win32.whl`这个文件下载，才772k。\n但是这个`whl`文件格式怎么安装呢？回到网页上面，发现说了是用pip安装，于是我在这个目录打开cmd命令行，输入：\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-5919730b2cd985f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n哈哈，献丑了！`whl`文件的安装方法，在`pip`的官方文档里说明的很清楚([看这里](https://pip.pypa.io/en/latest/user_guide/#installing-from-wheels))\n所以再来了一遍：\n输入：\n\n> pip install MySQL_python-1.2.5-cp27-none-win32.whl\n> 返回：\n> Processing c:\\tdownload\\mysql\\mysql_python-1.2.5-cp27-none-win32.whl\n> Installing collected packages: MySQL-python\n> Successfully installed MySQL-python-1.2.5\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-6c918755cadba8bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n安装成功！\n\n到Python里面试了一下`import MySQLdb`，也正常！\n于是乎，我觉得写文章的这个功夫，已经下载好的Microsoft Visual Studio也没必要了。。。。\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/19/comments",
    "created_at": "2015-12-20T16:17:09Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/19/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/19",
    "id": 123169864,
    "labels": [
      {
        "color": "c2e0c6",
        "default": false,
        "id": 290633780,
        "name": "MySQL",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/MySQL"
      },
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/19/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 19,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Python 安装Mysql模块及安装中错误的解决",
    "updated_at": "2015-12-20T16:17:09Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/19",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "## 第一步：小心翼翼地正常去触碰（连接）数据库\n## 第二步：几个循环读取数据库\n## 第三步：插入英文数据，前方高能：再插入中文数据！\n## 第四步：对网上各种乱码解决方案的测试\n### Solution 1: Python编码的基本设置\n\n``` python\n# coding:utf-8\nimport sys\nreload(sys)\nsys.setdefaultencoding('utf-8')\n```\n### Solution 2: 创建数据库连接时指定编码\n\n``` python\ndb = MySQLdb.connect(charset='utf8',host='localhost', db='dbTest', user='root',passwd='000000') \n```\n\n光是这么设置一下，不但中文传不进去，而且还会报错！：\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-1ec7d053a6c69ccf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n所以要配合下面的方法再试一下。\n### Solution 3: 在excute(sql)时传入一个奇妙形式的字符串\n\n``` python\n# 注：这里必须是'utf8'，而不是'utf-8'\ndb = MySQLdb.connect(charset='utf8', host='localhost', db='dbTest', user='root',passwd='000') \ncursor = db.cursor() \nvalues = [u\"中文测试 Unicode, charset='utf8'\"]\nprint value\ncursor.execute('insert into test(txt) values(%s) ', values)\ndb.commit()\ndb.close()\nprint 'OK'\n```\n\n下面是各种情况下成测试：\n- 传入列表的字符串为普通字符串，且设置了charset='utf8'，以及\n- 传入列表的字符串为Unicode字符串，且设置了charset='utf8'，**OK 通过！**\n  ![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-a202021f07d37856.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n- 传入列表的字符串为普通字符串，但**未设置**charset='utf8'：\n  结果**失败！**依然是乱码。\n  ![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-73d8070cfdfa9be6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n- 传入列表的字符串为Unicode字符串，但**未设置**charset='utf8'：\n  会直接报错。\n  ![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-b8fd36551570cfb9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n- 不传列表，直接传入普通字符串，且设置了charset='utf8',以及\n- 不传列表，直接传入Unicode字符串，且设置了charset='utf8'：\n  ![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-b4a9150d2d2d690c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n#### 总结：也就是说，目前有两个条件是必须的——\n1. 传入excute()第二个参数，必须是`list`列表变量\n2. connect()构造函数中，必须设置`charset='utf8'`\n### Solution 4: 在Python里面给MySQL数据库设定编码\n\n代码如下：\n\n``` python\ncursor = db.cursor() \ncursor.execute(\"SET NAMES 'utf8'\") \ncursor.execute(\"SET CHARACTER_SET_CLIENT=utf8\") \ncursor.execute(\"SET CHARACTER_SET_RESULTS=utf8\")\n# OK 测试成功\ncursor.execute('insert into test(txt) values(\"我是中文\") ') \n# OK 第二次不写以上三条也通过\n# cursor.execute('insert into test(txt) values(\"我是中文2，看看会不会保存设置。\") ') \n# Failed 无论怎么玩，charset=不设置就不通过\n# cursor.execute('insert into test(txt) values(\"我是中文3，看看不带charset=管不管用。\") ') \n# cursor.execute('insert into test(txt) values(\"我是中文4\") ') # OK 测试成功\ncursor.execute('insert into test(txt) values(\"我是中文5，看看重新打开mysql终端，还会不会保留设置。\") ') # OK 测试成功\ndb.commit()\ndb.close()\n```\n\n具体情况是：\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-ae37a740b8167731.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/841144-adae3e7d2d2a9267.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n#### 也就是说：这种方法也必须有2个条件：\n1. connect()构造函数中，必须设置charset='utf8'\n2. 必须显示地写三句excute语句，来设置MySQL端的编码\n\n只要遵守这2个条件，\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/18/comments",
    "created_at": "2015-12-20T16:17:01Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/18/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/18",
    "id": 123169858,
    "labels": [],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/18/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 18,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Python操作MySQL的中文乱码解决之路",
    "updated_at": "2015-12-20T16:17:01Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/18",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "通过各种点击观察，发现58同城的URL构造挺特殊的。\n根据互联网协议和规则，一般查询参数都直接在cgi后加参数，如`cgi?key=abc&page=1`这样的。\n但是58喜欢赶潮，除了关键词`key`之外，一些重要的查询参数（职业、行业、页码等）都在URL的目录中构造，而不是作为参数。这个技术我不太懂-_-!，大概是服务器对URL进行分析再获取参数吧，这个不重要。\n（注：我是用python开发，刚入门，目前正在用BeautifulSoup扩展，所以经常提到一些相关术语。另外，定位方法我建议采用CSS选择器，语法是通用的。）\n# 招聘搜索页源码分析\n\n下面是我将几乎全部搜索条件都加上的全链接：\n*http://bj.58.com/haidian/tech/pve_5363_244_pve_5754_1476_pve_5356_6_pve_5357_6/?key=%E6%95%B0%E6%8D%AE&minxinzi=3000_4999&postdate=20151209_20151216&param6693=8&PGTID=0d303655-0047-792b-50b1-e40ba04c7e85&ClickID=1 *\n好的，根据这个链接，以及各种尝试出来的判断，URL的结论如下：\n- 第一部分：子域名。`bj.58.com`，其中`bj`作为城市范围的“参数值”。值得一提的是，58同城没有省级分区，全都是针对某个城市。\n- 第二部分：目录参数。以下按目录**固定顺序**排列：\n  1. `/haidian/`即海淀区，代表了地区或地点“参数值”，还可以是`/wudaokou/`五道口、`/beijingdaxue/`北京大学等，还可以是`/beijingzhoubian/`北京周边，都是区域那一栏所有选项的中文全拼。**如果是现实全北京的数据的话，这个目录参数是被省略的的**。\n  2. `/tech/`即职位类别为\"计算机/互联网\"类。这一部分有点意思，如果改成`/job/`就会不限分类，显示所有结果；如果改成`/chengxuyuan/`则会显示\"程序员\"的子职业分类。也就是说，58不区分各种职业的层级关系，**也不考虑多选**——要么全选要么单选。\n  3. `pve_5363_244_pve_5754_1476_pve_5356_6_pve_5357_6` 这个是看起来最复杂的，但是稍微留意下也好理解，其实是——“更多”栏的筛选项，一般有四种参数在这里显示，每种之间用下划线连接，如果没有选择的话这里就不显示其值。其中`pve_$$$$_??`是固定格式，$$$$是4位数字代表参数名，后面的`??`是1~4位是不固定的数字代表参数值。\n     - pve_5363：公司行业代号。后面的244是“计算机/互联网行业”。合在一起代表“公司行业为计算机及互联网行业”。\n     - pve_5754：公司性质代号。后面的1476代表“私营”企业。\n     - pve_5356：学历要求代号。后面的6代表“本科”。\n     - pve_5357：经验要求代号。后面的6代表“3年-5年”。\n- 第三部分：查询参数。这里就没有固定顺序了。\n  - params6693：福利待遇。如果值是`1`，代表五险一金；`6`代表周末双休。**不可多选！**\n  - minixinzi：薪资范围。如`0_999`及`3000_4999`等。\n## 页码：\n\n页码超出搜索结果的总页码时，会显示省略号。\n但是结果再多，也只能显示到70页，和智联招聘差不多（到90页）。\n## 包含招聘结果的大框架\n\n页面唯一重要的列表信息，都包括在了这个框架中：\n\n``` html\n<div id=\"infolist\" class=\"tablist cleft\" tongji_id=\"ZP_job_list_div_items\">\n    <dl logr=\"p_1_33416242837515_24319259084094_0_1_ses^composite^0\" _pos=\"1\" sortid=\"503338211\" class=\"\">一条招聘信息</dl>\n</div>\n```\n\n框架定位关键是`<div>`的`id=\"infolist\"`，而结果列表中每一条的定位关键为`<dl>`标签包含`logr`属性，且规律为`logr=\"p_?_????_ses^composite??\"`\n## 逐行结果的代码解析\n\n每一条信息的源码如下(量比较大)：\n\n``` html\n<dl logr='p_1_33416242837515_24319259084094_0_1_ses^composite^0' _pos=\"1\"  sortid='503338211'>\n    <dd class=\"w46\">\n        <i infoid='24319259084094'></i>\n        <input type=\"hidden\" uid='33416242837515_0_0' name=\"uid\"/>\n    </dd>\n    <dt>\n        <a href='http://bj.58.com/chaoshishangye/24319259084094x.shtml' urlparams='psid=164836665190074319829635832&entinfo=24319259084094_0'  target=\"_blank\" class=\"t\"  _t='common'>数据处理员</a>\n        <span class=\"hoverinfobox\" style=\"display: none;\">\n         <div id=\"arrow\">\n            <em></em>\n            <span></span>\n        </div>\n        <div id=\"tipsbox\" class=\"tipsbox\">\n            <div class=\"xboxcontent\" class=\"tipsbox\">\n                <div class=\"titbar\"><h2>山东正元数字城市建设有限公司麻城项目</h2></div>\n                <ul class=\"zhanshi clearfix\">\n                    <li class=\"mar30\">\n                        <span>招聘职位：</span>全职招聘\n                    </li>\n                    <li>\n                        <span>招聘人数：</span>若干                </li>\n                    <li class=\"mar30\"> \n                        <span>工作经验：</span>不限                </li>\n                    <li>\n                        <span>学历要求：</span>不限\n                    </li>\n                    <!-- \n                    <li class=\"mar30\">\n                        <span>工作地点：</span>北京\n                     </li> -->\n                     <li class=\"mar30\">\n                        <span>转正工资：</span>1000-2000元\n                     </li>\n                </ul>\n                <p>\n                    有积极的态度和人际关系，能吃苦耐劳，文化水平高中以上。\n                </p>\n            </div>\n        </div>\n    </span>\n    <span tag=\"bbbindcpc\" url='http://bj.58.com/chaoshishangye/24319259084094x.shtml' name=\"zaixian_33416242837515\"></span>\n    </dt>\n    <dd class=\"w271\">\n        <a href='http://qy.58.com/33416242837515/' urlparams='psid=164836665190074319829635832&entinfo=24319259084094_0' target=\"_blank\" class=\"fl\" title=\"山东正元数字城市建设有限公司麻城项目\">山东正元数字城市建设有限公司麻...</a>\n    </dd>\n    <dd class=\"w96\">  北京   </dd>\n    <dd class=\"w68\">   12-13    </dd>\n</dl>\n```\n\n其中，一条信息的确认方式有3中：\n- `dl [logr]`或 `dl [sortid]`或 `dl [_pos]`，合并定位\n- `input [name=\"uid\"]`\n- `div class=\"xboxcontent\"` 和 `div class=\"tipsbox\"`合并定位\n### 获取每条招聘信息的基本内容\n1. 信息ID:定位在`<i infoid='24319259084094'></i>`\n2. uid：定位在`<input type=\"hidden\" uid='33416242837515_0_0' name=\"uid\"/>`\n3. 职位名称及职位详情页URL：\n\n``` html\n<a href='http://bj.58.com/chaoshishangye/24319259084094x.shtml' urlparams='psid=164836665190074319829635832&entinfo=24319259084094_0'  target=\"_blank\" class=\"t\"  _t='common'>数据处理员</a>` \n```\n\n需要注意的是，详情url尽量结合`href`和`urlparams`参数一起构造，不过不放在一起也无所谓。\n- 企业名称：定位在`<div class=\"titbar\"><h2>山东正元数字城市建设有限公司麻城项目</h2></div>`\n- 招聘职位：查找语法是-> `ul[class*=zhanshi] li nth-of-type(1)` 或者不用`nth-of-type()`语法，而是按文本匹配。\n- 招聘人数：查找语法是-> `ul[class*=zhanshi] li nth-of-type(2)` 或者不用`nth-of-type()`语法，而是按文本匹配。\n- 工作经验：查找语法是-> `ul[class*=zhanshi] li nth-of-type(3)` 或者不用`nth-of-type()`语法，而是按文本匹配。\n- 学历要求：查找语法是-> `ul[class*=zhanshi] li nth-of-type(4)` 或者不用`nth-of-type()`语法，而是按文本匹配。\n- 转正工资：查找语法是-> `ul[class*=zhanshi] li nth-of-type(5)` 或者不用`nth-of-type()`语法，而是按文本匹配。\n- 职位描述：查找语法是-> `ul[class*=zhanshi] + p`\n- 企业名称及链接：定位在以下代码中。注意企业名称才用`title`属性中的，而不是被阉割的文本处。\n\n``` html\n<dd class=\"w271\"> <a href='http://qy.58.com/33416242837515/' urlparams='psid=164836665190074319829635832&entinfo=24319259084094_0' target=\"_blank\" class=\"fl\" title=\"xxxx有限公司xx项目\">xxxx有限公司...</a></dd>`\n```\n- 工作地点：`<dd class=\"w96\">  北京   </dd>`\n- 发布日期：`<dd class=\"w68\">   12-13    </dd>`\n### 判断是否为推广信息\n\n如果一行信息内包括这条，那么就是推广信息：\n\n``` html\n<a class=\"tuiguang\" title=\"58同城建议您优选选择精准推广\" rel=\"nofollow\" target=\"_blank\" href=\"http://e.58.com/zhaopin/jingzhun.html#go\">精准</a>\n```\n\n通过`<a>`标签的`class=\"tuiguang\"`来定位。\n如果是正常消息，则没有这个链接，且只显示文本的“今天”或者是“12-12”这种具体日期。\n### 获取当前页码及下一页链接\n\n这一步其实是非常重要的！直接关系到是否抓瞎。\n首先，58的设置是这样的：\n58最多只显示70页信息，每页45条。强行打开70页以上的页面，或者超过当前结果的总页数，都会显示`新信息较少，我们为您推荐以下相关信息：`。\n我们先来看源码，然后再处理。\n\n``` html\n<div class=\"pagerout\">\n    <div class=\"pager\" tongji_id=\"ZP_job_list_div_next\">\n        <a class=\"prv\" href=\"/job/pn7/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\"> \n            <span>上一页</span ></a> \n        <a href=\"/job/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>1</span></a>\n        <a href=\"/job/pn2/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>2</span></a>\n        <a href=\"/job/pn3/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>3</span></a>\n                ...\n        <a href=\"/job/pn4/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>4</span></a>\n        <a href=\"/job/pn5/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>5</span></a>\n        <a href=\"/job/pn6/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>6</span></a>\n        <a href=\"/job/pn7/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>7</span></a>\n            <strong><span>8</span></strong>\n        <a href=\"/job/pn9/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>9</span></a>\n        <a href=\"/job/pn10/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>10</span></a>\n        <a href=\"/job/pn11/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>11</span></a>\n        <a href=\"/job/pn12/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>12</span></a>\n        <a class=\"next\" href=\"/job/pn9/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\">\n            <span>下一页</span></a>\n        <a href=\"/job/?key=%E6%95%B0%E6%8D%AE&cmcskey=%E6%95%B0%E6%8D%AE&final=1&specialtype=gls&canclequery=isbiz%3D0\" class=\"recently\">\n            <span>最新信息</span></a>\n    </div>\n</div>\n```\n\n从上面我们可以这样得到些信息：\n1. 上一页链接：`div[class=\"pagerout\"] a[class=\"prv\"]`，获取其`href`属性值就好了。如果没有，表示正在第一页。\n- 下一页链接：`div[class=\"pagerout\"] a[class=\"next\"]`，获取其`href`属性值就好了。如果没有，表示正在最后一页。\n- 当前页码：`div[class=\"pagerout\"] div[class=\"pager\"] strong`，当前页是不带链接的，所以要这样获取。\n### 判断搜索结果是否读完\n\n通过测试发现，根据结果数量的不同，除了正常外汇产生以下结果：\n1. 显示`新信息较少，我们为您推荐以下相关信息：`一般是因为超过了应有的页码了。这样的信息通过源码找到`<dt class=\"shortMsg\">新信息较少，我们为您推荐以下相关信息：</dt>`就可以了。\n2. 显示`很抱歉，没有找到符合已选条件的信息。\\n建议您：`，这是因为搜索条件太苛刻没有符合条件的。这样的，通过源码找到：\n\n``` html\n<i class=\"ico report\"></i><p>很抱歉，没有找到符合已选条件的信息。<br />建议您：</p>\n```\n# 招聘详细页源码分析\n\n这个页面比较简单，除了企业联系方式是动态加载的图片外都比较好定位抓取。不过联系方式也对我没什么太大用就不费那功夫了。\n## 精简招聘信息\n\n是被包含在头文件中用来给搜索引擎搜索用的，所以是精华中的精华哈哈。如下：\n\n``` html\n<meta name=\"description\" content=\"[最新招聘信息]诚聘诚聘数据分析师5000+1人,工作地点位于北京海淀中关村,公司规模100-499人,薪资待遇5000-8000元,工作经验1-2年,学历要求大专,招聘岗位职责： 建立公司数据分析的系统，组织数据分析报表的整合和规范、优化； 建立公司数据管理、查询的各项规章制度； 建立公司每日、周、月、季、年度数据分析报表模板； 研究数据分析的方法，做到报表制作, 100)\" />\n```\n\n只要通过`<meta name=\"description\"`定位，获取其`content`属性值`就好了。\n## 获取招聘基本信息\n\n所有的信息都包含在了`<div class=\"wb-main\">...</div>`框架中。能够找到的信息如下：\n1. 职位名称：\n- 更新时间：\n- 浏览人数和投递人数：这个略过，没什么用。\n- 企业名称及链接：都在`<a class=\"companyName\" >`，直接获取`href`就行了。\n- 营业执照是否已经过验证：`<div class=\"vip-yan fl\"><span title=\"营业执照已验证\" class=\"licIcon\"></span>营业执照已认证</div>`。找到`<div class=\"vip-yan fl\">`就好了。\n- 所在行业、企业性质、企业规模和登记时间都在这里了：\n\n``` html\n<div class=\"compMsg clearfix\">\n    <ul>\n        <li>\n            <span>行业：</span>\n            <a href=\"http://qy.58.com/bj_264/\" target=\"_blank\" >广告/创意</a>\n        </li>\n        <li>\n            <span>性质： </span>私营\n        </li>\n        <li class=\"scale\">\n            <span>规模： </span>100-499人\n        </li>\n        <li class=\"joinday\" style=\"display: none;\">\n            <span>入驻时长：</span>174天\n        </li>\n    </ul>\n</div>\n```\n\n写累了，直接上BeautifulSoup格式的css选择器的查找语法，分别为：\n所在行业 =`div[class*=compMsg] ul li a[href]`找到，\n企业性质 = `div[class*=compMsg] ul li nth-of-type(2)`,\n企业规模 = `div[class*=compMsg] ul li nth-of-type(3)`或者`li[class=\"scale\"]`, \n入驻时间 = `div[class*=compMsg] ul li nth-of-type(4)`或`li[class=\"joinday\"]`。\n## 获取联系信息\n\n都包含在这个div中：\n\n``` html\n<div class=\"contact mt25\" id=\"lianxi\" tongji_id=\"ZP_job_detail_div_contact\">...</div>\n```\n\n然后可以找到这些信息：\n1. 联系人：`<span class=\"conTip\">王经理 <span>(联系我时请说明是在58同城上看到的)</span></span>`，定位方法：`div[class=\"conTip\"]`。\n- 工作地点：源码有点长，定位方法：只能用文字匹配了，找到`<dt>工作地址：</dt>`和`<span class=\"area\">`这2个标签，它们\n  中间的标签就是地址。\n- 卫星定位：其实也不用费劲，直接找到`a[class=\"map\"]`，获取其`href`然后用增则表达式匹配2个`116.337795`这种数字，就得到精确坐标了。源码如下：\n\n``` html\n<a class=\"map\" href=\"javascript:setbg('诚聘数据分析师',430,240,'http://qy.58.com/mapdetail.html?lat=116.337795%2C39.977523&name=%E5%B7%A5%E4%BD%9C%E5%9C%B0%E7%82%B9');\"><i></i>查看地图</a>\n```\n## 获取企业介绍\n\n企业信息都包含在这里面：\n\n``` html\n<div class=\"compIntro\" id=\"gongsi\">...</div>\n```\n\n定位方式为：直接`div[class=\"compIntro\"]`或`#gongsi`获取所有文字内容就是企业介绍了。\n# 企业主页源码分析\n\n58还真是方便，再牛的企业都是一模一样的简单网页。不过还好，这也方便获取数据了。\n这个页面极其简单，但是有一点需要注意，数据是用表格动态呈现的，每种信息的位置并不固定，是根据企业有没有这个信息才显示出来的。所以在信息定位上，尽量避免用序号，只能用中文匹配了。。需要获取的数据如下：\n1. 卫星定位：在头文件中，如`<meta name=\"location\" content=\"province=北京;city=北京; coord=116.404,39.915\">`。找到`<meta name=\"location\" />`获取`coord`属性值就好了。\n- 企业名称及ID：`div[class=\"compT\"] a[href]`就可以找到企业名称，在`href`属性中的是`/ID/`这样的格式，去掉`/`就好了。\n- 企业资质：最好在`div[class=\"basicMsg\"] tr`中用文字匹配。\n- 企业性质：最好在`div[class=\"basicMsg\"] tr`中用文字匹配。\n- 企业行业：最好在`div[class=\"basicMsg\"] tr`中用文字匹配。\n- 企业规模：最好在`div[class=\"basicMsg\"] tr`中用文字匹配。\n- 联系人：  最好在`div[class=\"basicMsg\"] tr`中用文字匹配。\n- 联系电话：用文字匹配或`[class=\"telNum\"] img`，注意，联系电话都是图片格式的，而且可以不止一个！（省事的话就别下载图片了，保存链接就好了，因为图片来源明显不是静态图片而是服务器动态生成的。）\n- 企业网址（自己的）：最好在`div[class=\"basicMsg\"] tr a`中或用文字匹配。\n- 企业邮箱：和电话一样，用文字匹配或`[class=\"telNum\"] img`来找图片。\n- 公司地址：最好在`div[class=\"basicMsg\"] tr`中用文字匹配。\n# 企业信用档案页面URL及源码分析\n\n这个页面不知道入口在哪里？偶然看到的，然后心里大呼——哇塞！哈哈\n虽然找不到入口或者查询页面，但是发现其实看懂URL就很简单了，必要格式如下：\n`http://credit.vip.58.com/usercredit?userId=企业ID`\n那么这时候刚才获取的企业ID就起作用了。手工输入了一下，ID对的话每家企业都能出来。\n建立了档案的企业——会显示巨详细的信息！连法人代表、注册资本、详细地址全都有。\n没建立档案的企业——也会显示页面，但信息处全都是空白。\n下面就简单分析下基本信息的获取。\n## 获取企业营业执照信息\n\n表格基本上是固定位置的，因为大家营业执照都一样嘛哈哈~\n首先获取信息框架：`div[class=\"zzxx_ta\"] table`，然后再到这个框架里操作，就简单多了。\n下面是信息定位分析：\n1. 公司名称：`td[class=\"tdbg\"] + td`的第1项或`span[class=\"headTitle\"]`\n- 注册号：`td[class=\"tdbg\"] + td`的第2项\n- 经营地址：`td[class=\"tdbg\"] + td`的第3项\n- 注册资本：`td[class=\"tdbg\"] + td`的第4项\n- 成立日期：`td[class=\"tdbg\"] + td`的第5项\n- 法定代表人：`td[class=\"tdbg\"] + td`第6项\n- 登记机关：`td[class=\"tdbg\"] + td`的第7项\n- 企业类型：`td[class=\"tdbg\"] + td`的第8项\n- 营业期限：`td[class=\"tdbg\"] + td`的第9项\n- 核准日期：`td[class=\"tdbg\"] + td`的第10项\n- 登记状态：`td[class=\"tdbg\"] + td`的第11项\n- 在营（开业）企业：`td[class=\"tdbg\"] + td`的第12项\n- 经营范围：`td[class=\"tdbg\"] + td`的第13项\n## 获取企业其他信息\n1. 企业简介：`div[class=\"briefIntro\"]`\n2. 企业图片：`div[class=\"albumBox\"] img`\n3. 企业抽查检查信息：`div[class=\"zzxx_ta\"] nth-of-type(1) tr`，如果有记录则显示，无记录则只显示一条“无xx信息”。可以适当排除。\n4. 企业经营异常信息：`div[class=\"zzxx_ta\"] nth-of-type(2) tr`，如果有记录则显示，无记录则只显示一条“无xx信息”。可以适当排除。\n5. 企业行政处罚信息：`div[class=\"zzxx_ta\"] nth-of-type(3) tr`，如果有记录则显示，无记录则只显示一条“无xx信息”。可以适当排除。\n6. 企业严重违法信息：`div[class=\"zzxx_ta\"] nth-of-type(4) tr`，如果有记录则显示，无记录则只显示一条“无xx信息”。可以适当排除。\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/17/comments",
    "created_at": "2015-12-15T12:18:43Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/17/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/17",
    "id": 122260610,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/17/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 17,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "58招聘数据爬取准备: 源码分析",
    "updated_at": "2015-12-15T22:12:26Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/17",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "# 网页源码解析 - 智联招聘 企业主页\n\n智联招聘的企业主页分为2种：标准主页和Special主页。Special主页是智联招聘里唯一能够让企业自己定制的页面了。\n这也就形成了千奇百怪的源码，分析起来并不容易。不过好在企业的基本信息，在招聘页面就已经获得了。\n剩下唯一需要的信息就是企业的`所有招聘信息`了，也是非常重要的地方。\n招聘信息在2种不同主页中，在源码中也分为了2种构建方式：\n- 标准主页   ：正常的tag循环陈列。域名统一是`http://special.zhaopin.com/`这样的\n- Special主页：在javascript中以list列表变量形式储存，并动态显示出来。域名统一是`http://company.zhaopin.com/`这样的。\n## 隐藏的“标准主页”\n\n在研究Special主页源码中，有很大的不确定性。不过索性发现了一个“好玩的”东西：\n\n``` html\n<td align=\"right\"><!--<a href=\"http://company.zhaopin.com/CC252448519.htm\" target=\"_blank\" style=\"color:#ffffff;\">招聘职位标准页面</a>-->&nbsp;</td>\n```\n\n其中链接和内容是被注释掉的，增加了获取的难度。不顾BeautifulSoup还是可以搜到它的，作为Comment对象存在。\n#### 这意味着什么？那就意味着——每个自定义的主页，实际上还是存在着一个“标准版”主页的，那样就容易解析了。\n## 企业ID获取\n\n其实也没什么大作用，不过如果方便获取，拿到它也是不错的，因为毕竟是一家企业在智联的数据库中唯一的标识吗！\n通过观察，企业ID在企业主页的URL、源码中都频频出现：例如A公司的ID是`121017111`在URL中有时是`CC1210/1711/`，有时是`CC121017111.htm`，有时是`1210171119251740.htm`，还有`pagepublish/12101711/index.html`这样的。而在源码中经常会在Javascript脚本中出现，如`CC121017111J90251741000`这样的或是`CC121017111J90250035000_530_1`这样的。\n首先可以确定的是，企业ID一般是**9位纯数字**组成。\n如上面URL中的如果以ID作为目录名则会时而减去最后1位变成8位，暂时不知道为什么，也许他们的目录必须在8位以下吧。\n下面就来解析一下几种已知的出现方式和获取方式。\n### 标准主页中的企业ID：\n- 网址是`http://company.zhaopin.com/CC220397616.htm`的\n  1. 在URL中就可以获取ID，去掉`CC`和文件扩展名即是9位的ID`220397616`。\n  2. 最直接的，脚本中会找到`<input type=\"hidden\" value=\"CC220397616\" id=\"companyNumber\" />`这样的代码，直接可以通过`id=\"companyNumber\"`找到企业ID。\n  3. 在JS脚本中可以看到`var arrVarFromASP = ['CC220397616'];`这样的变量。\n  4. 在JS脚本中可以看到这样的链接跳转：\n  \n  ``` html\n  <a href=\"javascript:void(0)\" onclick=\"applyjob('CC220397616J90250044000_530_1_66_101__2_');return false;\" class=\"applyJob\">申请职位</a>\n  <a href=\"javascript:void(0);\" onclick=\"saveJobTerminalApply('CC220397616J90250044000_530_1'); return false;\" class=\"collectJob\">收藏职位</a>\n  ```\n  \n  ```\n  可以发现，`CC220397616J90250044000_530_1_66_101__2_`无论多长，企业ID总是`CC`的9位数字，而从`J`开头，就是具体的**职位ID**了。\n  ```\n  1. 源码中有`<a href=\"http://sou.zhaopin.com/jobs/companysearch.ashx?CompID=CC220397616\">公司内搜索</a>`会发现这样的链接标签，参数`CompID`即是。\n  2. 源码中有`<a href=\"http://jobs.zhaopin.com/220397616250038.htm\" target=\"_blank\">【全职】助理分析师 可即刻上崗</a>`这样的链接表情，在文件名`220397616250038.htm`中，前9位是企业ID，后6位`250038`为职位ID。\n  3. \n### Special主页中的企业ID：\n\nSpecial主页中确定的信息并不多，唯一确定会出现企业ID的就是招聘链接的URL中了：\n\n``` html\n<a href=\"http://jobs.zhaopin.com/286304915250270.htm?ssidkey=y&ff=02&ss=101\" target=\"_blank\" title=\"实习生（长期招聘）\">实习生（长期招聘）</a>\n```\n\n将URL中的文件名获取，并得到前9位数字就是了。\n\n获取完标准页面链接后，就可以开始解析了。因为标准页面的链接也不一定能获取到，所以Special页面的分析也简单看一看。\n以下为两种企业主页的源码分析。\n## 标准企业主页\n\n``` html\n<div class=\"part4 positionList\" id=\"morecity\">\n<h3>\n    <span class=\"jobNameT\">职位名称</span>\n    <span class=\"comNameT\">公司名称</span>\n    <span class=\"jobPayT\">职位月薪</span>\n    <span class=\"jobAddrT\">工作地点</span>\n    <span class=\"publishTimeT\">发布日期</span>\n</h3>\n<!--1个职位详情对应一个类名为positionListContent的div-->\n<div class=\"positionListContent\" id=\"positionlist_530\">\n\n    <div class=\"positionListContent1\">\n        <span class=\"jobName\"><a href=\"http://jobs.zhaopin.com/552256928252361.htm\" target=\"_blank\">数据库工程师</a></span>\n        <span class=\"comName\">民信阿里信息咨询(北京)有限公司</span>\n        <span class=\"jobPay\">15001-20000元</span>\n        <span class=\"jobAddr\">北京</span>\n        <span class=\"publishTime\">2015-12-12</span>\n        <div class=\"clearFloat\"></div>\n    </div>\n    <div class=\"cLeft\">\n        <span>地点：北京</span>\n        <span>公司性质：民营</span>\n        <span>公司规模：1000-9999人</span>\n        <span>经验：3-5年</span>\n        <span>学历：本科</span>\n        <span>职位月薪：15001-20000元</span>\n        <p>\n             岗位职责：\u2028  1、公司核心数据库的管理，保证数据库正常运转和数据的安全；包括安装、配置、升级，数据备份、恢复，性能监控分析调优等；\u20282、参与开发设计，负责数据结构设计；\u20283、负责公司数据仓库的建设。     任职要求：\u2028  1、具有三年以上MySQL工作经验；\u20282、精通MySQL数据库的运行机制和体系架构；\u20283、精...\n        </p>\n    </div>\n</div>\n```\n\n可以看到，大容器是class中含有`positionList`的div。其中每条招聘信息都是`class=\"positionListContent\"`的div，职位链接其实非常好找，找到`class=\"jobName\"`的span标签获取其下a链接的href地址就好了。\n## Special企业主页\n\n实际上Special企业主页也不全都是以下的构建方式，发现了一些少数的大公司，会完全不一样，通过代码来看，是真没什么办法的。。。\n\n``` html\n<SCRIPT language=JavaScript>\nvar arrJobList = \n[\n[\"高级前端工程师(js开发)\",\"http://jobs.zhaopin.com/147164943250563.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"软件/互联网开发/系统集成\",\"160000\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250563000\"],[\"php开发工程师(接受应届生)\",\"http://jobs.zhaopin.com/147164943250562.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"软件/互联网开发/系统集成\",\"160000\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250562000\"],[\"课程顾问（销售类，月薪6000-15000，提供意向资源，地点西二旗）\",\"http://jobs.zhaopin.com/147164943250696.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"咨询/顾问/调研/数据分析\",\"2140000\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250696000\"],[\"C++开发工程师（pc端，接受应届生）\",\"http://jobs.zhaopin.com/147164943250785.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"软件/互联网开发/系统集成\",\"160000\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250785000\"],[\"高级人事专员（偏企业文化方向）\",\"http://jobs.zhaopin.com/147164943250700.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"人力资源\",\"5002000\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250700000\"],[\"管理培训生（渠道区域经理方向）\",\"http://jobs.zhaopin.com/147164943250452.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"销售管理\",\"7001000\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250452000\"],[\"营销管理培训生（课程顾问方向）\",\"http://jobs.zhaopin.com/147164943250084.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"销售业务\",\"4010200\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250084000\"],[\"咨询客服（欢迎优秀应届毕业生）\",\"http://jobs.zhaopin.com/147164943250080.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"客服/售前/售后技术支持\",\"4000000\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250080000\"],[\"班主任\",\"http://jobs.zhaopin.com/147164943250128.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"教育/培训\",\"2090000\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250128000\"],[\"数据库管理员\",\"http://jobs.zhaopin.com/147164943250208.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"IT运维/技术支持\",\"200500\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250208000\"],[\"管理培训生（校区营销主任方向）\",\"http://jobs.zhaopin.com/147164943250200.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"销售管理\",\"7001000\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-12\",\"0\",\"CC147164943J90250200000\"],[\"网站产品经理\",\"http://jobs.zhaopin.com/147164943250679.htm?ssidkey=y&ff=02&ss=101\",\"北京\",\"530\",\"互联网产品/运营管理\",\"160200\",\"北京简单科技有限公司\",\"14716494\",\"2015-12-11\",\"0\",\"CC147164943J90250679000\"],\n[\"空\",\"空\",\"空\",\"空\",\"空\",\"空\",\"空\",\"空\",\"空\",\"空\",\"空\"]\n];\nvar HotJobs = \",,\";\nvar ShowDeptInfo = \",,\";\nvar ShowJobInfo = \",,\";\nfunction BuildJlist(){\n    var SHTML,EHTML,JobHTML;\n    SHTML = \"<table width=\\\"100%\\\" align=\\\"center\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\";\n    EHTML = \"</table>\";\n    JobHTML = \"<tr>\";\n    var numJob = 0;\n    for (var i = 0; i <= arrJobList.length-2; i++){\n        if ( ((ShowJobInfo==\",,\")?true:(ShowJobInfo.search(arrJobList[i][10])>=0)) && ((ShowDeptInfo==\",,\")?true:(ShowDeptInfo.search(arrJobList[i][7])>=0)) ) {\n            JobHTML = JobHTML + \"<td width=\\\"100%\\\"><table width=\\\"94%\\\" border=\\\"0\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" style=\\\"table-layout:fixed;border-collapse:collapse;\\\"><tr><td class=\\\"jobclass\\\" style=\\\"overflow:hidden;text-overflow:ellipsis;\\\" title=\\\"\"+\"\"+\"　\"+arrJobList[i][0]+\"　\"+\"\"+\"\\\"><nobr>&gt;&gt; \"+\"\"+\"<a href=\\\"\"+arrJobList[i][1]+\"\\\" target=\\\"_blank\\\">\"+arrJobList[i][0]+\"</a> \"+\"\"+isvip(arrJobList[i][9])+ishot(arrJobList[i][10])+\"<\\/td><\\/tr><\\/table><\\/td>\";\n            numJob++;\n            if (numJob%1==0){\n                JobHTML = JobHTML + \"<\\/tr>\";\n            }\n        }\n    }\n    if(numJob%1!=0){\n        JobHTML = JobHTML + \"<\\/tr>\";\n    }\n    JobHTML = SHTML + JobHTML + EHTML;\n    document.getElementById(\"joblist\").innerHTML = JobHTML;\n}\n</SCRIPT>\n```\n\n可以看到，该企业所有的招聘信息都存在Javascript脚本中的叫`arrJobList`的变量里了。变量的格式为：`arrJobList=[[第1条招聘信息],[第2条招聘信息]]`，是列表嵌套列表。而每条招聘信息数据的内容为：`[\"职位名称\",\"招聘网址\",\"所在地点\",\"城市代码\",\"行业名称\",\"行业代码\",\"企业名称\",\"企业代码\",\"发布日期\",\"0\",\"未知编号\"]`\n其实这个地方，难点就在于怎么在python中获取Javascript脚本中的变量。\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/15/comments",
    "created_at": "2015-12-13T10:27:22Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/15/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/15",
    "id": 121911820,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/15/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 15,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "智联招聘数据爬取准备(3)-企业主页源码解析",
    "updated_at": "2015-12-13T10:27:22Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/15",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "# 智联招聘爬虫练习 - 任务列表\n- [x] 完成搜索页面结果的获取\n- [x] 完成招聘信息页面的抓取\n- [x] 完成企业主页信息的抓取\n- [ ] 加入多IP地址来伪装身份\n- [ ] 多线程操作\n- [ ] 将数据存入数据库\n- [ ] 更新数据库（查重） \n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/14/comments",
    "created_at": "2015-12-13T10:20:51Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/14/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/14",
    "id": 121911639,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/14/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 14,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "智联招聘爬虫练习 - 任务列表",
    "updated_at": "2015-12-20T16:18:03Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/14",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "# BeautifulSoup ：一些常用功能的使用和测试\n### 也懒得转Markdown语法了，评论都在代码里了。其中句子后面写着`OK`的，那就说明测试通过，可以正常使用。\n\n``` python\n# -*- coding: utf-8 -*-\n'''\n    # Author    : Solomon Xie\n    # Usage     : 测试BeautifulSoup一些用法及容易出bug的地方\n    # Enviroment: Python 2.7, Windows 7 (32bit), Chinese Language Pack\n'''\n\nimport time, re\nimport bs4 # 必须导入，因为需要做一些bs4专有类型的判断\nfrom bs4 import BeautifulSoup\n\n\ndef test_BeautifulSoup():\n    \"\"\"\n        # BeautifulSoup的一些问题实在让人蛋大。\n        # 这里研究下吧。\n    \"\"\"\n    '''\n        # 基础部分\n        # 关于bs4的解析速度 #################\n        # 仔细阅读文档后发现，文档解析器对速度至关重要！\n        # 如果没有安装cchardet模块，那么光一个网页就要7秒！！\n        # 还不包括获取网页时间。然而试过后，如过山车一般：\n        # 安装了cchardet以后7秒变成了一瞬。\n        # 然而，用了几天后又变回了7秒，卸载了cchardet又变回了一瞬间！\n        # 另外，BeautifulSoup升级到4以后，导入方法变了，如下：\n    '''\n    from bs4 import BeautifulSoup\n\n    '''\n        # 关于被解析文档的编码格式 ##########\n        # 又不淡定了，官方说无论被传入什么编码的文档，都会被统一为unicode\n        # 实际上有时候我发现，必须以unicode传入才能获得正确结果。。。\n        # 这里试验发现，还真的是如此!必须传入decode过的码\n    '''\n    html_doc = open('test-Zhilian-list-page-sm1.html', 'r').read().decode('utf-8')\n    # ^ 这个html文件其实是智联招聘搜索页的源码，可以自己保存下来直接试一试。\n\n    '''\n        # 关于bs4的文档解析器 ##############\n        # 又是一个大坑：bs升级到4后，实例化时需要明确指定文档解析器，如：\n        # soup = BeautifulSoup(html_doc, 'lxml')\n        # 但是著名的lxml在这里就是个大坑啊，\n        # 因为它会直接略过html所有没写规范的tag，而不管人家多在乎那些信息\n        # 因为这个解析器的事，我少说也折腾了好几个小时才找到原因吧。\n        # 总结：记住，选择html5lib！效率没查多少，最起码容错率强，不会乱删你东西！\n    '''\n    soup = BeautifulSoup(html_doc, 'html5lib')\n\n\n    '''\n        # 关于bs4的输出格式 #################\n        # prettify()官方解释是一律输出utf-8格式，\n        # 其实却是unicode类型！！所以必须在prettify()里面指定编码。\n    '''\n    # output = soup.prettify('utf-8')\n    # print repr(output)\n\n    '''\n        # 所谓的多种搜索节点方式##############\n        就是不知道为什么:\n        无论怎么测验，find()和find_all()就是死活不管用！\n        只有用官方文档里的英文版《爱丽丝》测试才没问题。\n        也就是说，问题还是出在了文字编码上？\n        可是当我试着查找英文时，搜索结果还是为零-_-!\n        到了最后，bs4中众多的搜索工具上，\n        唯一能用的就是select()了，即CSS选择器。\n        虽然极其好用，但还是有限制性。\n        不死心，所以我还是再试验一下find_all()的毛病吧。\n    '''\n    # == find_all()之搜索标签名称 ============ OK\n    # result = soup.find_all('dl') # OK\n\n    # == find_all()之搜索标签属性 ============ not all OK\n    # result = soup.find_all(id='newlist_list_div') # OK\n    # result = soup.find_all(href=re.compile('.htm')) # Failed 竟然不支持href搜索，和官方说的不一样\n    # result = soup.find_all(name='vacancyid') # Failed 不支持标签的name属性搜索\n\n    # == find_all()之按CSS搜索 ============ OK\n    # result = soup.find_all('div', class_='clearfix') # OK\n    # result = soup.find_all('div', class_=re.compile('newlist_detail')) # OK\n    # result = soup.find_all(class_=re.compile('newlist_detail')) # OK\n\n    # == find_all()之按内容text搜索 ============ \n    # find_all()加上text参数后，\n    # 返回的是字符串！而不是tag！！\n    # 类型为：<class 'bs4.element.NavigableString'>\n    # result = soup.find_all(text='会计') # OK 内容必须完全相等才算！（不含子标签） \n    # result = soup.find_all(text=u'数据') # OK 内容必须完全相等 无所谓unicode了\n    # result = soup.find_all(text=re.compile(u'学历：')) # OK unicode是绝对要！否则不行！\n\n    # == select() , CSS选择器搜索引擎 ============ \n    '''\n        CSS选择器的语法请看w3cschool的文档：\n        http://www.w3school.com.cn/cssref/selector_nth-of-type.asp\n        下面总结了在BeautifulSoup中的语法搜索：\n        标签搜索，如：'input' ,搜索所有标签为input的元素\n        宽泛路径，如：'body a' ,就是body内所有a元素\n        绝对路径，如：'body > div > div > p' ,必须完全符合路径才能搜到\n        ID搜索  ，如：'#tag-1' ,搜索id为tag1的标签\n        混合搜索，如：'div #tag1', 搜索id为xx的div标签\n            'div[class*=newlist_detail] ~ div[class*=newlist_detail]' ,大混合\n        属性存在，如：'a[href]' ,搜索所有存在href属性的a标签\n        类名搜索，如：'[class=clearfix]' ,找到class名等于clearfix的标签\n            '[class^=newlist_detail]' ,找到class名中以\"newlist_detail\"开头的标签\n            '[class$=zwmc]'           ,找到class名中以\"zwmc\"结尾的标签\n            '[class*=clearfix]'       ,找到class名中包含\"zwmc\"的标签\n        兄弟搜索，如：\n            '#links ~ .clearfix' ,找到id为links标签的所有class等于\"clearfix\"的兄弟标签\n            '#links + .clearfix' ,找到id为links标签的下一个class等于\"clearfix\"的兄弟标签\n        序列搜索，如：'p nth-of-type(3)' ,这个说白了就是选择第3个p标签\n            'p nth-of-type(odd)' 表示奇数的p标签\n            'p nth-of-type(even)' 表示偶数的p标签\n            'p nth-of-type(n)' 表示所有的p标签\n            'p nth-of-type(3n)' 表示3的倍数的p标签\n            'p nth-of-type(4n+1)' 表示4的倍数加1的p标签，如第5个、第9个\n    '''\n    # result = soup.select('dl > p') # OK tag路径搜索\n    # result = soup.select('div[class*=newlist_detail] ~ div') # OK 各种混合搜索\n    # result = soup.select('[class*=zwmc]') # OK 各种混合搜索\n    con = soup.select('div[class^=newlist_detail]')[0]\n    result = con.select('[class*=zwmc]')\n    # print type(result[0])\n\n    print len(result) \n\n    # out = soup.select('[class*=zwmc]')\n    # print len(out)\n    # for item in out:\n    #   print item.get_text().encode('utf-8')\n\ndef bsText(tags=[], info=''):\n    if len(tags):\n        t = tags[0] # 因为只会有一个对象\n        # select()选择器返回的是tag标签\n        # 而find_all()用text查询是返回的是字符串！\n        if isinstance(t, bs4.element.Tag):\n            return t.get_text().encode('utf-8')\n        elif isinstance(t, bs4.element.NavigableString):\n            return t.string.encode('utf-8')\n    else:\n        return '无[%s]信息'%info\n\n# 计算时间\ndef timeup(func):\n    start = time.clock()\n    func()\n    end = time.clock()\n    timeuse = end-start\n    print '\\n[%s()]函数一共使用了%d秒时间。\\n' %(func.__name__, timeuse)\n    return timeuse\n\nif __name__ == '__main__':\n    timeup(test_BeautifulSoup)\n\n\n```\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/13/comments",
    "created_at": "2015-12-12T05:12:33Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/13/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/13",
    "id": 121834179,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/13/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 13,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "BeautifulSoup ：一些常用功能的使用和测试",
    "updated_at": "2015-12-12T05:12:37Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/13",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "# 网页源码解析 - 智联招聘搜索列表\n\n一开始必须要解析智联招聘搜索列表页，从这里更方便实现各种深层级数据抓取。\n网页地址是：\nhttp://sou.zhaopin.com/jobs/searchresult.ashx\n## 搜索参数\n\n智联招聘的服务器只接收Get方式，如果用Post方式抓取页面，则不会返回想要的招聘信息，而会得到一堆广告。\n下面是我手动测试的一些智联在这个页面Get方式传递的搜索参数，也是目前最常用的（注释掉的不怎么常用）：\n\n``` Python\ndata_filter = {\n    'kw' : keyword, # 搜索关键词\n    'sm' : '0', # 显示方式代码： 列表是'0',详细是'1'。显示不同源码也不同，尽量选列表模式，源码更好解析。\n    'jl' : '北京', # 搜索城市：'北京'，多项用'+'连接(URL编码为%2B)\n    #'bj' : '', # 职位类别代码：互联网产品/运营管理 的代码为 '160200'，多项用'%3B'连接(URL编码的%)\n    #'in' : '', # 行业代码：多项用';'连接(URL编码为%3B)\n    'kt' : '0', # 关键词搜索范围：全文'0' | 公司名'1' | 职位名'2'\n    'isadv' : '0', # 是否高级搜索：快速搜索'0' | 高级搜索'1'\n    # 'isfilter' : '1', # 是不是筛选器： '0' | '1'\n    # 'ispts' : '', # 通常为 '1'\n    #'sj' : '', # 职位子类别代码：\n    # 'gc' : '5号', # 地铁线路： '5号'\n    # 'ga' : '立水桥', # 地名或地铁站名： '天通苑南' 、 '小汤山'\n    # 'sb' : '0', # 排序方式代码：默认排序是'0',相关度排序是'1', 首发日排序是'2'\n    #'fjt' : '10000', # 职位标签 五险一金'10000' 年底双薪'10001' 绩效奖金'10002' 等等\n    # 'sf' : '-1', # 月薪底线：'8001' 不限是'-1'\n    # 'st' : '-1', # 月薪上限：'10000' 不限是'-1'\n    # 'ct' : '-1', # 公司性质代码\n    # 'el' : '-1', # 学历代码\n    # 'we' : '-1', # 工作经验代码\n    # 'et' : '-1', # 职位类型代码：兼职'1' 全职'2' 实习'4'\n    # 'pd' : '-1', # 发布时间(天数)：一周是'7'，一个月是'30'，不限是'-1'\n    'p' : page, # 页码，超出总页码时，则会显示最后一页\n    #'gr' : '', # \n    # 're' : '2015', # 这个限制了搜素数量，但是其实也不是按年份搜索\n    'sg' : guid, # 即全网唯一标示符——GUID\n    #'' : '' #\n}\n```\n\n它在python中的用法，就是通过urllib.urlencode()来转成URL参数格式，并提交。\n## 网页源码解析 - “列表模式”\n\n如果解析“列表模式”的智联招聘网页，需要在Get参数里面的sm设为`0`。\n里面唯一需要的就是中间的结果列表部分，\n即id为'newlist_list_content_table'的DIV用，源码如下：\n\n``` html\n<div class=\"newlist_list_content\" id=\"newlist_list_content_table\">\n    <table width=\"853\" class=\"newlist\" cellpadding=\"0\" cellspacing=\"0\">\n        一条招聘信息\n    </table>\n    <table cellpadding=\"0\" cellspacing=\"0\" width=\"853\" class=\"newlist\">\n        一条招聘信息\n    </table>\n</div>\n```\n\n其中会循环输出class为`newlist`的**Table表格**\n即一条一条的招聘信息。\n每一条招聘信息的源码如下：\n\n``` html\n<table cellpadding=\"0\" cellspacing=\"0\" width=\"853\" class=\"newlist\">\n<tr>\n    <td class=\"zwmc\" style=\"width: 250px;\">\n        <input type=\"checkbox\" name=\"vacancyid\" value=\"CC575878820J90250640000_530_1_03_201__1_\" onclick=\"zlapply.uncheckAll('allvacancyid')\" />\n        <div style=\"width: 224px;*width: 218px; _width:200px; float: left\">\n            <a style=\"font-weight: bold\" par=\"ssidkey=y&ss=201&ff=03\" href=\"http://jobs.zhaopin.com/575878820250640.htm\" target=\"_blank\">会计（<b>数据</b>）</a>\n        </div>\n    </td>\n    <td style=\"width: 60px;\" class=\"fk_lv\"><span>87%</span></td>\n    <td class=\"gsmc\"><a href=\"http://company.zhaopin.com/CC575878820.htm\" target=\"_blank\">中海软银投资管理有限公司</a></td>\n    <td class=\"zwyx\">面议</td>\n    <td class=\"gzdd\">北京</td>\n    <td class=\"gxsj\"><span>12-10</span><a class=\"newlist_list_xlbtn\" href=\"javascript:;\"></a></td>\n</tr>\n<tr style=\"display: none\" class=\"newlist_tr_detail\">\n    <td width=\"833px\" style=\"line-height: 0;\" colspan=\"6\">\n        <div class=\"newlist_detail\">\n            <div class=\"clearfix\">\n                <ul>\n                    <li class=\"newlist_deatil_two\"><span>地点：北京</span><span>公司性质：民营</span><span>公司规模：100-499人</span><span>经验：5-10年</span><span>学历：大专</span><li class=\"newlist_deatil_last\"> 岗位职责：  1. 熟练使用excel<b>数据</b>统计功能； 2.核对第三方支付平台及技术后台<b>数据</b>并找出差异； 3. 完成与<b>数据</b>部工作衔接，做好<b>数据</b>台账的统计工作； 4．根据资产端和资金端<b>数据</b>完成日汇总报表； 5. 领导交办的其他工作。...</li></li>\n                </ul>\n                <dl>\n                    <dt>\n                        <a href=\"javascript:void(0)\" onclick=\"return zlapply.searchjob.ajaxApplyBrig1('CC575878820J90250640000_530','ssi','_1_03_201__2_')\">\n                            <img src=\"/assets/images/newlist_sqimg_03.jpg\" />\n                        </a>\n                    </dt>\n                    <dd><a href=\"javascript:zlapply.searchjob.saveOne('CC575878820J90250640000_530')\"><img src=\"/assets/images/newlist_scimg_06.jpg\" /></a></dd>\n                </dl>\n            </div>\n        </div>\n</tr>\n</table>\n```\n\n在“列表”模式中，每一条记录采用了Table格式，第一个TR是简述信息，第二个TR是扩展信息。简述信息中，每个信息都有固定Class属性，而且是非空信息，是肯定能获取到的。而扩展信息中，规则性不强，只能用“公司性质：xx”这样的正则表达式来匹配或是用tag的嵌套层级和顺序来定位，成功率和稳定性都不高。\n总结一下，这里的主要定位方式为：\n- 职位名称： `class = \"zwmc\"`  \n- 反馈率  ： `class = \"fk_lv\"`  \n- 公司名称： `class = \"gsmc\"`  \n- 职位月薪： `class = \"zwyx\"` 或 `<span>职位月薪：xx</span>` \n- 工作地点： `class = \"gzdd\"` 或 `<span>地点：xx</span>`  \n- 更新时间： `class = \"gxsj\"` 或 `<li><p>12-10</p></li>`\n- 公司性质： `<span>公司性质：xx</span>`  \n- 公司规模： `<span>公司规模：xx</span>`  \n- 学历要求： `<span>学历：xx</span>` \n- 岗位职责： `<li>岗位职责：xx</li>`  \n\n其实还有tag的嵌套层级和顺序，可以用来定位信息。但是我不想这么做，因为这个太不稳定了，而且大大的增加了代码的长度，如果不存在信息还会导致报错。相比而言，用中文的人能理解的语言来进行正则匹配，更有成功率，且更容易操作。\n## 网页源码解析 - “详细模式”\n\n如果解析“详细模式”的智联招聘网页，需要在Get参数里面的sm设为`1`。\n里面唯一需要的就是中间的结果列表部分，\n即id为'newlist_list_content_table'的DIV用，源码如下：\n\n``` html\n<div class=\"newlist_list_content\" id=\"newlist_list_content_table\">\n    <div class=\"newlist_detail newlist\">一条招聘信息</div>\n    <div class=\"newlist_detail newlist\">一条招聘信息</div>\n</div>\n```\n\n其中会循环输出class为`newlist_detail newlist`的子**DIV层**\n即一条一条的招聘信息。\n每一条招聘信息的源码如下：\n\n``` html\n<div class=\"newlist_detail newlist\">\n    <div class=\"clearfix\">\n        <ul>\n            <li class=\"newlist_deatil_first clearfix zwmc\"><input type=\"checkbox\" name=\"vacancyid\" value=\"CC255550019J90256441000_530_1_03_201__1_\" onclick=\" zlapply.uncheckAll('allvacancyid') \" /><div style=\"width:300px;float:left\">\n                <a style=\"font-weight: bold\" par=\"ssidkey=y&ss=201&ff=03\" href=\"http://jobs.zhaopin.com/255550019256441.htm\" target=\"_blank\">\n                行政后勤经理</a></div></li>\n            <li class=\"newlist_deatil_three gsmc\">\n                <a href=\"http://special.zhaopin.com/bj/2011/lsw05120476/enter.html\" target=\"_blank\">\n                乐视网信息技术(北京)股份有限公司</a></li>\n            <li class=\"newlist_deatil_two\">\n                <span>地点：北京</span>\n                <span>公司性质：上市公司</span>\n                <span>公司规模：1000-9999人</span>\n                <span>学历：本科</span>\n            <li class=\"newlist_deatil_last\"> \n            岗位职责：  1、负责对日常行政后勤工作（包括名片、加班餐、办公用品、员工离入职、印章、会议室的相关事宜）进行全面的监督控制，发现问题及时予以规范，协助上级领导应对处理突发事件; 2、进行行政后勤各项费用预算，严格管控各项费用的使用情况，节省公司成本，实现效益的最大化; 3、部门员工的招聘与培养和...</li></li>\n        </ul>\n        <dl>\n            <p>12-07</p>\n            <dt>\n                <a href=\"javascript:void(0)\" onclick=\"return zlapply.searchjob.ajaxApplyBrig1('CC255550019J90256441000_530', 'ssi' , '_1_03_201__2_' ) \">\n                    <img src=\"/assets/images/newlist_sqimg_03.jpg\" />\n                </a>\n            </dt>\n            <dd><a href=\"javascript:zlapply.searchjob.saveOne('CC255550019J90256441000_530')\"><img src=\"/assets/images/newlist_scimg_06.jpg\" /></a></dd>\n        </dl>\n    </div>\n</div>\n```\n\n在源码上，虽然“详细模式”的解析和“列表模式”有很大的不同，几个信息的抓取方式不一样，但是却可以共用。如有的是按照class名，有的是按照tag名等。但是这不影响两种模式放在一起解析——为每一个信息元素如“月薪”、“公司名称”等，设置多种搜索方式。在写代码时，只要分别检索多种方式就可以获得数据。具体参考抓取代码的实现。\n## 获取搜索结果数量\n\n虽然每页只能显示40条信息，但是在页面上方还是会显示一共有多少条搜索结果。如“”\n代码如下：\n\n``` html\n<span class=\"search_yx_tj\">\n    共<em>2025</em>个职位满足条件\n</span>\n```\n## 获取GUID——全局唯一标识符\n\n虽然没有研究过GUID，但是我看到智联招聘的网页会在URL中显示的调用，参数名为`sg`。\n不知道它对爬虫有什么影响。不过我还是尝试着获取了一下，很简单直接用id搜索input标签的value就行。网页源码如下：\n\n``` html\n<input type=\"hidden\" id=\"guid\" value=\"6857d119ab0147938da7b78b4c18f857\" />\n```\n## 获取当前页码及下一页的链接地址\n\n智联招聘这个页面最逗的是，如果当前信息只有4页，那么及时url参数中页码指定100，它仍然不会自动跳转。所以从url或者`.geturl()`来判断当前真实页码也就成了不对了。\n不过好在一点，这个页面下方的`页码控制栏`中可以清楚的看到当前页码是多少，所以就从这里入手。这部分网页源码如下：\n\n``` html\n<div class=\"pagesDown\" style=\"_width:570px\">\n<ul>\n    <li><a class=\"pre-page nopress\">上一页</a></li><li><a href=\"#\" class=\"current\" >1</a></li>\n    <li><a href=\"http://sou.zhaopin.com/jobs/searchresult.ashx?jl=北京&kw=助理&sm=0&ga=立水桥&gc=5号线&gr=2&isfilter=1&fl=530&isadv=0&sg=c67ae20d31954238959da7915552c240&p=2\">2</a></li>\n    <li><a href=\"http://sou.zhaopin.com/jobs/searchresult.ashx?jl=北京&kw=助理&sm=0&ga=立水桥&gc=5号线&gr=2&isfilter=1&fl=530&isadv=0&sg=c67ae20d31954238959da7915552c240&p=3\">3</a></li>\n    <li><a href=\"http://sou.zhaopin.com/jobs/searchresult.ashx?jl=北京&kw=助理&sm=0&ga=立水桥&gc=5号线&gr=2&isfilter=1&fl=530&isadv=0&sg=c67ae20d31954238959da7915552c240&p=4\">4</a></li>\n    <li><a href=\"http://sou.zhaopin.com/jobs/searchresult.ashx?jl=北京&kw=助理&sm=0&ga=立水桥&gc=5号线&gr=2&isfilter=1&fl=530&isadv=0&sg=c67ae20d31954238959da7915552c240&p=5\">5</a></li>\n    <li><a href=\"http://sou.zhaopin.com/jobs/searchresult.ashx?jl=北京&kw=助理&sm=0&ga=立水桥&gc=5号线&gr=2&isfilter=1&fl=530&isadv=0&sg=c67ae20d31954238959da7915552c240&p=6\">6</a></li>\n    <li><a href=\"http://sou.zhaopin.com/jobs/searchresult.ashx?jl=北京&kw=助理&sm=0&ga=立水桥&gc=5号线&gr=2&isfilter=1&fl=530&isadv=0&sg=c67ae20d31954238959da7915552c240&p=7\">7</a></li>\n    <li><a href=\"http://sou.zhaopin.com/jobs/searchresult.ashx?jl=北京&kw=助理&sm=0&ga=立水桥&gc=5号线&gr=2&isfilter=1&fl=530&isadv=0&sg=c67ae20d31954238959da7915552c240&p=8\">8</a></li>\n    <li><a href=\"http://sou.zhaopin.com/jobs/searchresult.ashx?jl=北京&kw=助理&sm=0&ga=立水桥&gc=5号线&gr=2&isfilter=1&fl=530&isadv=0&sg=c67ae20d31954238959da7915552c240&p=9\" class=\"pagesmore\">...</a></li>\n    <li class=\"pagesDown-pos\"><a href=\"http://sou.zhaopin.com/jobs/searchresult.ashx?jl=北京&kw=助理&sm=0&ga=立水桥&gc=5号线&gr=2&isfilter=1&fl=530&isadv=0&sg=c67ae20d31954238959da7915552c240&p=2\" class=\"next-page\">下一页</a>\n    <li class=\"nextpagego-box\"><input type=\"hidden\" id=\"guid\" value=\"c67ae20d31954238959da7915552c240\" />到       页<input type=\"text\" class=\"pagesnum\" name=\"goto\" id=\"goto\" value=\"1\" onkeyup=\"zlapply.searchjob.fnCheckInt(this,event)\" onchange=\"zlapply.searchjob.fnCheckInt(this,event)\" onkeypress=\"zlapply.searchjob.enter2Page(this,event,51)\"  /><button type=\"button\" class=\"nextpagego-btn\" name=\"go\" onclick=\"zlapply.searchjob.gotoPage(this.form.goto.value,51,'','c67ae20d31954238959da7915552c240')\"></button></li>\n    <li class=\"clearfix\"></li>\n</ul>\n</div>\n```\n\n从中可以看到，当前页码的定位极其方便，只要从`class=\"pagesDown\"`的div中找到`class=\"current\"`的a链接就得到了。\n同理，下一页的链接可以找`class=\"next-page\"`的a标签获取href值。\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/12/comments",
    "created_at": "2015-12-12T04:54:23Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/12/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/12",
    "id": 121833692,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/12/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 12,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "智联招聘数据爬取准备(1)-智联招聘搜索列表源码解析",
    "updated_at": "2015-12-13T10:07:02Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/12",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "# 网页源码解析 - 智联招聘 招聘详细信息页面\n\n根据招聘列表里面跳转过来的详细招聘信息页面。爬虫再根据这里进行关键信息提取。\n相比于搜索列表页来说，这页内容很简单，而我们需要的也不多。\n不过需要注意的是，这里在职业信息之外还需要额外收集企业信息。\n虽然另外有专门的代码跳转到企业主页去搜集信息，但是阅读源码后发现，每家Special企业都可以自己定制网页，因此获取基本信息不方便。\n所以企业基本信息要在这一页就收集齐（基本信息和企业主页里是完全一样的）。\n下面开始简单分析下各处源码。\n## 职位的头信息\n\n``` html\n<div class=\"inner-left fl\">\n    <h1>销售、销售总监阿尔卡特数据、语音交换机（金牌代理商）</h1>\n    <h2><a onclick=\"recordOutboundLink(this, &#39;terminalpage&#39;, &#39;tocompanylink3&#39;);\" href=\"http://company.zhaopin.com/%E4%B8%8A%E6%B5%B7%E5%B7%A8%E4%BC%98%E4%BF%A1%E6%81%AF%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8_CC355086418.htm\" target=\"_blank\">上海巨优信息科技有限公司</a></h2>\n    <div style=\"\" class=\"welfare-tab-box\"> <span>五险一金</span><span>年底双薪</span><span>绩效奖金</span><span>年终分红</span><span>带薪年假</span><span>节日福利</span><span>通讯补贴</span><span>交通补助</span> </div>\n</div>\n```\n\n可以直接用`class*=\"inner-left\"`对头信息进行定位，然后在其中用`h1`标签为职位名称，`h2`标签为公司名称，`class=\"welfare-tab-box\"`为福利信息。\n## 职位基础信息\n\n``` html\n<ul class=\"terminal-ul clearfix\">\n    <li><span>职位月薪：</span><strong>8001-10000元/月</strong></li>\n    <li><span>工作地点：</span><strong><a target=\"_blank\" href=\"http://www.zhaopin.com/beijing/\">北京</a></strong></li>\n    <li><span>发布日期：</span><strong><span id=\"span4freshdate\">2015-12-12</span></strong></li>\n    <li><span>工作性质：</span><strong>全职</strong></li>\n    <li><span>工作经验：</span><strong>1-3年</strong></li>\n    <li><span>最低学历：</span><strong>大专</strong></li>\n    <li><span>招聘人数：</span><strong>1人 </strong></li>\n    <li><span>职位类别：</span><strong><a href=\"http://jobs.zhaopin.com/355086418250171.htm?ssidkey=y&ss=201&ff=03#\"></a><a target=\"_blank\" href=\"http://jobs.zhaopin.com/beijing/sj001/\">销售经理</a></strong></li>\n</ul>\n```\n\n基础信息定位很简单，`class^=\"terminal-ul\"`就够了。但是其中的每个信息没有标记，就只能用中文名称或者是顺序定位了。\n信息内容全包含在`strong`标签里。\n## 企业基本信息\n\n``` html\n<div class=\"company-box\">\n    <p class=\"company-name-t\"><a rel=\"nofollow\" href=\"http://company.zhaopin.com/%E4%B8%8A%E6%B5%B7%E5%B7%A8%E4%BC%98%E4%BF%A1%E6%81%AF%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8_CC355086418.htm\" target=\"_blank\">上海巨优信息科技有限公司</a></p>\n    <ul class=\"terminal-ul clearfix terminal-company mt20\">\n        <li><span>公司规模：</span><strong>20-99人</strong></li>\n        <li><span>公司性质：</span><strong>民营</strong></li>\n        <li><span>公司行业：</span><strong><a target=\"_blank\" href=\"http://jobs.zhaopin.com/beijing/in160100/\">通信/电信运营、增值服务</a></strong></li>\n        <li><span>公司主页：</span><strong><a rel=\"nofollow\" href=\"http://www.g-best.com.cn/\" target=\"_blank\">http://www.G-best.com.cn</a></strong></li>\n        <li>\n            <span>公司地址：</span><strong>\n                上海市徐汇区桂林路396号中核浦原科技园3号楼101室<br>\n            </strong>\n        </li>\n    </ul>\n    <!--是否是反馈通-->\n    <input type=\"hidden\" id=\"displayRegionScopeId\" name=\"displayRegionScopeId\" value=\"0\">\n</div>\n```\n\n定位的话，直接找到class中**含有**`terminal-company`的ul标签，然后按照`li`标签的顺序或者按照中文文字匹配到企业基本信息。\n## 职位描述信息\n\n``` html\n<div class=\"tab-inner-cont\">\n    <!-- SWSStringCutStart -->\n    <div style=\"FONT-SIZE: 12px\"><strong>任职要求：</strong></div><div style=\"FONT-SIZE: 12px\"><br><div style=\"WORD-WRAP: break-word; FONT-FAMILY: Verdana; WORD-BREAK: break-all; LINE-HEIGHT: 18px; BACKGROUND-COLOR: rgb(255,255,255)\">1、1年以上IT行业的售经验,以通讯产品及服务器产品为主；<br>2、熟悉Siemens,NEC, Panasonic,Alcatel等PBX 机型，具有VOIP组网的相关销售经验；具备专业客户销售技巧；擅长与客户交流并能迅速整合客户所需资源；</div><div style=\"WORD-WRAP: break-word; FONT-FAMILY: Verdana; WORD-BREAK: break-all; LINE-HEIGHT: 18px; BACKGROUND-COLOR: rgb(255,255,255)\">3、熟悉思科、华为、Alcatel等数据交换机，具有相关销售经验；具备专业客户销售技巧；擅长与客户交流并能迅速整合客户所需资源；&nbsp;<br>4、具备良好人际交往、市场策划、方案演讲、商务谈判，有强烈的赢单欲望，乐于陌生人交流，善于沟通，性格稳重、勤奋，能够承受较大销售业绩压力。<br>5、有销售同类语音交换机PBX、数据交换机&nbsp;产品经验者优先。</div></div><div style=\"FONT-SIZE: 12px\"><br><strong>岗位职责：</strong></div><div style=\"FONT-SIZE: 12px\"><br>1、负责本地区维护老客户，拓展新市场，建立与扩大销售网络，提升销售业绩,完成总部或分公司交付的销售任务； <br>2、建立和维护本地区的客户关系，树立良好的公司口碑和品牌形象；<br>3、负责项目投标的运作，包括商务文件的起草和整个标书的制作与审定；负责商务合同的起草、签署和项目收款工作；<br>4、高标准地为客户提供优质服务和妥善处理客户投诉，以提高客户的满意度；<br>5、不断学习新知识与新技术，提升自身的专业能力与职业素质；</div><div style=\"FONT-SIZE: 12px\">&nbsp;</div><div style=\"FONT-SIZE: 12px\"><strong>工作地点：</strong>&nbsp;北京</div>\n    <!-- SWSStringCutEnd -->\n    <b>工作地址：</b>\n    <h2>\n        北京市丰台区南三环西路16号搜宝商务中心2号楼2608室&nbsp;\n\n        <a href=\"javascript:fnOpenMiniMap('','','北京','31.167743','121.417537');\" onclick=\"dyweTrackEvent(&#39;bjobsdetail14gb&#39;, &#39;showjobmap&#39;);\" class=\"see-map\">查看职位地图</a>\n\n    </h2>\n    <p>\n        <button id=\"applyVacButton1\" class=\"button-small\" title=\"申请职位\" onclick=\"zlzp.searchjob.ajaxApplyBrig3(&#39;1&#39;);dyweTrackEvent(&#39;bjobsdetail14gb&#39;,&#39;directapply_middle&#39;);\"></button>\n    </p>\n</div>\n```\n\n这个也好说，直接找到`class=\"tab-inner-cont\"`，然后自动排除所有标签，只获取文本信息就够了。\n需要注意的是，源码里有2个class为`tab-inner-cont`的div，第1个是职位描述，第2个是企业简介。\n## 企业简介\n\n``` html\n<div class=\"tab-inner-cont\" style=\"display:none;\">\n    <h5><a rel=\"nofollow\" href=\"http://company.zhaopin.com/%E4%B8%8A%E6%B5%B7%E5%B7%A8%E4%BC%98%E4%BF%A1%E6%81%AF%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8_CC355086418.htm\" onclick=\"recordOutboundLink(this, &#39;terminalpage&#39;, &#39;tocompanylink4&#39;);\" target=\"_blank\">上海巨优信息科技有限公司</a><a target=\"_blank\" class=\"color-blue fr see-other-job\" href=\"http://company.zhaopin.com/%E4%B8%8A%E6%B5%B7%E5%B7%A8%E4%BC%98%E4%BF%A1%E6%81%AF%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8_CC355086418.htm\" rel=\"nofollow\" onclick=\"recordOutboundLink(this, &#39;terminalpage&#39;, &#39;tocompanylink2&#39;);\">该公司其他职位</a></h5>\n    <p></p>\n    <div style=\"FONT-SIZE: 12px\">&nbsp; &nbsp; 上海巨优信息科技有限公司是一家专业的企业通信设备供应商及产品服务商，提供包括语音、数据、多媒体等各类专网设备。公司为各种类型的企业提供适用的通信及数据网络融合方案：宾馆、医院、大、中型企业、小型商务办公、政府机关等。<br>&nbsp; &nbsp; 巨优信息是法国阿尔卡特朗讯公司企业通信系统全国金牌代理商，同时也是华为、HP、思科等IT国际知名品牌的核心合作伙伴。</div><div style=\"FONT-SIZE: 12px\">&nbsp; &nbsp; 公司拥有一支经阿尔卡特认证的工程师团队，其中多名工程师同时拥有思科、华为的认证证书。专业的管理、专业的人才，构建了专业的客户培训服务体系，专业的品质与完善的服务保障体系为公司赢得了长期友好合作的客户伙伴。公司技术部以其雄厚的技术实力、丰富的方案实施经验为用户提供多种类型的语音通信、组网、IP统一通信、数据网络等方案的设计与集成服务，并为用户提供端到端的全面解决方案。<br>&nbsp; &nbsp; 我司自成立以来，业务发展迅速，业务已分布至全国各地，有效地增强了我司在中国大陆地区的客户综合服务能力。集售前、售中、售后服务于一身的营销服务网络，为用户提供了全面周到的专业化服务。与此同时，我司拥有遍布全国各地的客户资源及核心合作伙伴，并且造就了出色的销售团队。<br>&nbsp; &nbsp; 巨优科技与世界最先进通讯技术同步，为国内商业用户提供一流的产品技术及服务品质，我们的理念是“客户至上、勇于创新、精诚合作、尽职尽责！” <br>&nbsp; &nbsp; 巨优科技一贯秉承“创新、开拓、最佳性价比的产品；诚挚服务快速成长性的市场；矢志成为一流的通信公司”的宗旨，不断推出符合市场发展趋势的特色产品，信守不断创新和帮助客户成功的核心价值观。&nbsp;<br>&nbsp;</div>\n    <p></p>\n    <h3></h3>\n    <p>\n    </p>\n</div>\n```\n\n上面说过了，职位描述的class也为`tab-inner-cont`，所以获取的时候按顺序取值就好了。\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/11/comments",
    "created_at": "2015-12-12T04:52:12Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/11/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/11",
    "id": 121833645,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/11/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 11,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "智联招聘数据爬取准备(2)-招聘信息页面源码解析",
    "updated_at": "2015-12-13T10:27:02Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/11",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "# Python中文字符的理解：str()、repr()、print\n\n都说Python人不把文字编码这块从头到尾、从古至今全研究通透的话是完全玩不转的。我终于深刻的理解到了。通宵了好几夜，各种试验，print、print再print，中文还是既得不到也输不出。\n看了网上几乎所有主要的相关文章，还是没搞定。沉静下来开始反思：是他们写的不好，还是我理解的不好？所以我决定，再加深程度，一步一个脚印地研究这个问题，不忽略任何一个小细节的理解。先从字符串在Python中最基本的原理理解起。\n首先说明一下，我的开发环境是：\n\n```\npython --version : 2.7\nOS: Windows 7 (32bit)\nIDE: Sublime3, IDLE, Windows cmd命令行\n```\n## Python 字符串的存储\n\n先看一段代码，这是在IDLE命令行中几个简单的交互：\n\n``` python\n    >>> 'hello'\n    'hello'\n    >>> print 'hello'\n    hello\n    >>> '你好'\n    '\\xc4\\xe3\\xba\\xc3'\n    >>> print '你好'\n    你好\n```\n\n`(都知道在python的命令行里，直接输入一个变量会显示它的值，直接输入一个复杂对象会给你显示它的对象类型和内存地址)`\n从上面可以看出，变量时英文的话不管直接输入还是print结果都一样。可是为什么`直接输入变量`和`print变量`会显示不一样的东西呢？\n原来，python 2系是绝对`英文友好`的。中文对于它来说，**只存储为一串编码而不是原文**。\n`\\xc4\\xe3\\xba\\xc3`这种东西对于中国python人来说是再熟悉不过的东西了，没事就蹦出来几次。最逗的是，我查了半天，`\\x$$`这种东西到底是什么编码，是utf-8还是gb2312？竟然没找到什么明确的说法，这个一会儿再说了。\n### 话说回来，为什么`'你好'`和`print '你好'`结果会不一样呢？\n\n在查看`print`官方文档时发现，在python里面print是一个非常厉害的小家伙：它能把几乎任何常见类型的对象打印成一串文字，甚至包括列表、字典、元组等等。这在别的语言里是不可理解的，所以给从其他语言转过来的人埋了个大坑。\n### 总结：Python中出现的任何中文，虽然我们在编辑器里看到的是中文，但是背地里全是一串编码。千万不要轻易信任print！`print xx`给你显示出来的，其实并不是xx的真实面貌！\n\n至于这个编码是什么格式，unicode还是utf-8之类，一会再说。\n## Python中的`str()`和`repr()`原生函数\n\n好多人都知道str()能把123数字转成字符串，python里的str()甚至还能把列表、字典等对象转成字符串。这都好理解，可是一旦把`str()`和`repr()`放在一起，大家就全都不淡定了-_-!\n来看一段代码，仍是在IDLE里交互：\n\n``` python\n    >>> str('hello')\n    'hello'\n    >>> repr('hello')\n    \"'hello'\"\n\n    >>> str('你好')\n    '\\xc4\\xe3\\xba\\xc3'\n    >>> repr('你好')\n    \"'\\\\xc4\\\\xe3\\\\xba\\\\xc3'\"\n```\n\n先看前两句：英文的'hello'在str()后仍是'hello'，可是在repr()后就变成了\"'hello'\"。这就说明，str()返回的就是字符串本身，而repr()虽然返回的也是字符串，但它是一个`标准字符串`，官方解释比较绕，我来解释下吧。`repr`是representation及描述的意思，不是对人的描述，而是对python机器的描述，也就是它会将某物返回一个它`在python中的描述`。说人话：`repr(obj)`告诉我们obj这个变量在背地里是什么样子，在背地里是怎么被python处理被python\"玩弄\"的。\n**在python里，我们总会被眼睛欺骗。编辑器里显示的东西，并不总是它原本的面貌。python为了方便，总是表面上一套，背地里又一套。**\n再来理解后两句：中文的'你好'在str()后变成了编码'\\xc4\\xe3\\xba\\xc3'，在repr()后变成了\"'\\xc4\\xe3\\xba\\xc3'\"。`\\`都加上了转移符变成`\\\\`，相当于把字符串中的内容都“标准化”了。至于`'`变成`\"`只是为了说明repr()返回的是一个经过处理的新字符串。\n## print后的str()和repr()\n\n来看代码：\n\n```\n    >>> print str('你好')\n    你好\n    >>> print repr('你好')\n    '\\xc4\\xe3\\xba\\xc3'\n```\n\n之前str('你好')显示的是`'\\xc4\\xe3\\xba\\xc3'`，而一经过print，就变成了正确的'你好'。上面说过了，命令行里直接输入一个变量，显示的是它在python后台存储的数据；而用print出来的东西，会显出出尽量友好、让人能看懂的东西。\n理解了这个，对print这两个结果的不同，也就全然理解了。然后也就放弃print作为考据的心了。\n\n_另外，以上代码的交互，再windows系统cmd中，结果是一样的。_\n### 这样一来，python对字符串的基本理解就差不多了。这篇文章里尽量避免了对各种code编码的讨论，如unicode, ascii, ANSI, UTF-8, GB2312, GBK等等，是因为太复杂了。简单东西先理解，把基础先打牢，复杂的东西下一篇再研究。\n",
    "closed_at": null,
    "comments": 0,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/10/comments",
    "created_at": "2015-12-09T07:29:30Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/10/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/10",
    "id": 121179482,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/10/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 10,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "Python中文字符的理解：str()、repr()、print",
    "updated_at": "2015-12-09T09:52:01Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/10",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  },
  {
    "assignee": null,
    "assignees": [],
    "author_association": "OWNER",
    "body": "# 总之对于这个我唯一认定的事就是：Python里要是弄不明白编码，那这个语言就放弃吧！\n\n下面是目前收获到的一些内容，没写完，再议吧。。。\n\n首先要在文件第一行写上`编码声明`\n\n```\n#coding:utf-8\n```\n\n编码声明的格式其实很随意的，coding=utf-8, -_\\- Coding:Utf-8 -_\\- 等等都行，  \nPython只识别关键的字。  \n如果不写编码声明，那么文件中出现的任何中文都会报错：  \n`SyntaxError: Non-ASCII character '\\xe5' in file xx.py on line 2, \n    but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details`\n\nPython 2.x 系列对中文真是弱爆了，查了巨多的文献，还是不那么明了。  \n本来想要练习开发个什么小程序，结果全都被扼杀在编码的坑里了。  \n随便搜一搜\"Python 编码\"就知道，所有作者们都遇到了一毛一样的问题。。。  \n据说，\n\n```\n除非把整个编码系统从古至今的历史熟透，各编码的原理通透，\n相互之间的转换了熟于胸，Python的这个坑是跨不过去的。小看了这小玩意儿！  \n```\n\n下面开始正式研究下吧，争取能做到practical。\n\n这是原始汉字数据：\n\n```\nchinese = '你好' # 普通中文字符串\nuni = u'你好' # 字符串前加u代表转换为unicode变量类型\n```\n# 研究一个原始的中文字符串\n\n在IDLE命令行中执行一下试试\n\n```\n>>> chinese\n'\\xc4\\xe3\\xba\\xc3'\n>>> print chinese\n你好\n>>> type(chinese)\n<type 'str'>\n```\n\n这是什么鬼！为什么直接输变量名和打印变量名会不一样呢？！\n静悄悄的理解一下，应该是：\nchinese变量在内存中存储的就是`\\xc4`这种编码，是给机器看的\n而print打印出来的是给人看的，所以python要处理一下让人能看懂。\n再来说，`\\xc4`这是个什么码？而且`你好`是两个字，为什么编码里有4个`\\x$$`这种？\n所以推理到，python对每个汉字是用2个编码来存储的。\n首先能确定的是，`\\x$$`这种格式是ASCII编码，因为百科到如下：\n\n> ASCII(American Standard Code forInformation Interchange)，是一种单字节的编码。计算机世界里一开始只有英文，而单字节可以表示256个不同的字符，可以表示所有的英文字符和许多的控制符号。不过ASCII只用到了其中的一半（\\x80以下）\n\n也就是说，英文字母用`\\x01`到`\\x80`之间的数表示，数字不用编码，\n那么汉字这种国外字就全部都是从`\\x80`往后排了。因为字太多，肯定不够用，所以:\n1. 格式变成了'\\x字母数字'这种东西\n2. 而且还用两个字节码来表示一个中国汉字。\n## 用chardet检测字符串编码\n\n那么来检验一下我的推理吧？用个第三方模块`chardet`  \n\n``` python\nimport chardet\nprint chardet.detect('你好')\n# [结果]: {'confidence': 0.3598212120361634, 'encoding': 'TIS-620'}\n```\n\n这什么鬼！！为什么检测出来有35%的`TIS-620编码`？\n不能放弃，我再来试一试：\n\n``` python\nimport chardet\nprint chardet.detect(str('你好'))\n# [结果]: {'confidence': 0.3598212120361634, 'encoding': 'TIS-620'}\nprint chardet.detect(repr('你好'))\n# [结果]: {'confidence': 1.0, 'encoding': 'ascii'}\n```\n\n真是受够了。。。\n为什么检测`str()`出来的就是`TIS-620`，而检测`repr()`出来的就是`ASCII`呢？\nPython世界中，str和repr到底谁才更接近本源、谁才是出来捣乱的呢？\n唉算了吧，不用这个了。\n## str 和 repr 在存储和print打印上的对比\n\n我又想起了一个实验，我们再来一下：\n\n```\n>>> repr('你好')\n\"'\\\\xc4\\\\xe3\\\\xba\\\\xc3'\"\n>>> print repr('你好')\n'\\xc4\\xe3\\xba\\xc3'\n>>> str('你好')\n'\\xc4\\xe3\\xba\\xc3'\n>>> print str('你好')\n你好\n```\n\n什么毛病！据说`repr()`和`str()`是一样的啊！怎么会这样呢？\n实验里，`repr()`和`str()`的内存数据的确是一样的，但是一print就不一样了：\n只有print `str()`才会显示出中文！\n那可能是print的问题了。那是不是说如果我不print，而是别的操作如存到文件中，那么就不会有中文出现了？试试吧：\n\n``` python\nf = open('test.txt', 'w')\nf.write(str('你好'))\nf.write(repr('你好'))\n# [结果]：你好 '\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd'\n```\n\n也就是说不是print的问题了，`str()`和`repr()`在本质上就是有区别的。\n只有`str()`会把中文显示出来，而`repr()`不但会把中文显示成`ASCII码`，\n还会异常搞笑的把在print里显示4位字节码变成6位字节码！！！这是什么毛病？！\n好吧，这个先留着，来看看转成了unicode的中文吧。\n# 研究已变成unicode类型的中文字符串\n\n好吧，再来试一试uni：\n\n```\n>>> uni\nu'\\u4f60\\u597d'\n>>> print uni\n你好\n>>> type(uni)\n<type 'unicode'>\n```\n\n这又是什么鬼！我原先的想象是，\nprint一个unicode对象，肯定出来的是unicode码，但两种方法的结果完全反了。。。\n再静悄悄的理解下，uni肯定也是在内存中存储的是unicode编码。\n在python中unicode的格式是：u'\\u$$$$'，其中$$$$代表4位的字符编码。\n然后又试了一下这个：\n## str(unicode类型) 和 repr(unicode类型) 结果的对比\n\n```\n>>> str(uni)\n.......\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 0-1 ......\n>>> repr(uni)\n\"u'\\\\u4f60\\\\u597d'\"\n```\n## str()和repr()的对比\n\n这个好理解，用`help(str)`命令可以看到：\nstr(`basestring`)是将某个object变成一个漂亮的易观看的字符串。\n并且，它需要的是basestring类型变量作为参数。\n而`help(repr)`只是简单说，repr(`object`)会返回这个object的规范化字符串。\n它对参数并没有什么要求。\n这样对比来看的话，str和repr在**in**和**out**上都不一样。\nstr 对谁进来有限定，出去要漂亮要好看；\nrepr对谁进来无所谓，出去也够标准就行。\n# 原始中文字符串和unicode格式的中文字符串对比\n\n暂时写不下去了，再议吧。。。。。。。。\n",
    "closed_at": null,
    "comments": 1,
    "comments_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/9/comments",
    "created_at": "2015-12-07T22:28:09Z",
    "events_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/9/events",
    "html_url": "https://github.com/solomonxie/solomonxie.github.io/issues/9",
    "id": 120883295,
    "labels": [
      {
        "color": "d4c5f9",
        "default": false,
        "id": 290633688,
        "name": "Python",
        "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/labels/Python"
      }
    ],
    "labels_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/9/labels{/name}",
    "locked": false,
    "milestone": null,
    "number": 9,
    "repository_url": "https://api.github.com/repos/solomonxie/solomonxie.github.io",
    "state": "open",
    "title": "对Python 2.x的通宵抱怨",
    "updated_at": "2015-12-08T10:18:33Z",
    "url": "https://api.github.com/repos/solomonxie/solomonxie.github.io/issues/9",
    "user": {
      "avatar_url": "https://avatars2.githubusercontent.com/u/14041622?v=4",
      "events_url": "https://api.github.com/users/solomonxie/events{/privacy}",
      "followers_url": "https://api.github.com/users/solomonxie/followers",
      "following_url": "https://api.github.com/users/solomonxie/following{/other_user}",
      "gists_url": "https://api.github.com/users/solomonxie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/solomonxie",
      "id": 14041622,
      "login": "solomonxie",
      "organizations_url": "https://api.github.com/users/solomonxie/orgs",
      "received_events_url": "https://api.github.com/users/solomonxie/received_events",
      "repos_url": "https://api.github.com/users/solomonxie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/solomonxie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/solomonxie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/solomonxie"
    }
  }
]
