[{"url":"https://api.github.com/repos/solomonxie/gitissues/issues/4","repository_url":"https://api.github.com/repos/solomonxie/gitissues","labels_url":"https://api.github.com/repos/solomonxie/gitissues/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/solomonxie/gitissues/issues/4/comments","events_url":"https://api.github.com/repos/solomonxie/gitissues/issues/4/events","html_url":"https://github.com/solomonxie/gitissues/issues/4","id":295438427,"number":4,"title":"testing 中文","user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-08T09:24:13Z","updated_at":"2018-02-08T09:29:11Z","closed_at":null,"author_association":"OWNER","body":"# 总之对于这个我唯一认定的事就是：Python里要是弄不明白编码，那这个语言就放弃吧！\r\n\r\n下面是目前收获到的一些内容，没写完，再议吧。。。\r\n\r\n首先要在文件第一行写上`编码声明`\r\n\r\n```\r\n#coding:utf-8\r\n```\r\n![caso sgs c 01 bdrip 1280x720 x264_aac -0005](https://user-images.githubusercontent.com/14041622/35965316-80a9ebd0-0cf5-11e8-8f96-ab103fbb0243.jpg)\r\n\r\n编码声明的格式其实很随意的，coding=utf-8, -_\\- Coding:Utf-8 -_\\- 等等都行，  \r\nPython只识别关键的字。  \r\n如果不写编码声明，那么文件中出现的任何中文都会报错：  \r\n`SyntaxError: Non-ASCII character '\\xe5' in file xx.py on line 2, \r\n    but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details`"},{"url":"https://api.github.com/repos/solomonxie/gitissues/issues/3","repository_url":"https://api.github.com/repos/solomonxie/gitissues","labels_url":"https://api.github.com/repos/solomonxie/gitissues/issues/3/labels{/name}","comments_url":"https://api.github.com/repos/solomonxie/gitissues/issues/3/comments","events_url":"https://api.github.com/repos/solomonxie/gitissues/issues/3/events","html_url":"https://github.com/solomonxie/gitissues/issues/3","id":294688108,"number":3,"title":"testing issue 2","user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-02-06T09:31:28Z","updated_at":"2018-02-06T09:32:23Z","closed_at":null,"author_association":"OWNER","body":"# Using variables inside Postman and Collection Runner\r\nPosted on 20 Feb, 2014Author abhinav\r\nVariables are among the most powerful features in Postman. Using variables in your Postman requests, eliminates the need to duplicate requests, which can save a lot of time!\r\n\r\n"},{"url":"https://api.github.com/repos/solomonxie/gitissues/issues/2","repository_url":"https://api.github.com/repos/solomonxie/gitissues","labels_url":"https://api.github.com/repos/solomonxie/gitissues/issues/2/labels{/name}","comments_url":"https://api.github.com/repos/solomonxie/gitissues/issues/2/comments","events_url":"https://api.github.com/repos/solomonxie/gitissues/issues/2/events","html_url":"https://github.com/solomonxie/gitissues/issues/2","id":294687892,"number":2,"title":"testing issue 1","user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-06T09:30:46Z","updated_at":"2018-02-08T17:08:13Z","closed_at":null,"author_association":"OWNER","body":"# 10 tips for working with Postman variables\r\n\r\n\r\nVariables are a fundamental concept in programming, and in Postman, they can be your best friend. Instead of painstakingly updating individual values, use variables to cascade changes effortlessly through the rest of your code. If you’re not already using variables in Postman, get ready to have your mind blown.\r\n\r\n![image](https://user-images.githubusercontent.com/14041622/35851588-70ef05f6-0b63-11e8-9b9e-ffc0b3db7af5.png)\r\n"},{"url":"https://api.github.com/repos/solomonxie/gitissues/issues/1","repository_url":"https://api.github.com/repos/solomonxie/gitissues","labels_url":"https://api.github.com/repos/solomonxie/gitissues/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/solomonxie/gitissues/issues/1/comments","events_url":"https://api.github.com/repos/solomonxie/gitissues/issues/1/events","html_url":"https://github.com/solomonxie/gitissues/issues/1","id":294661555,"number":1,"title":"TO-DO List","user":{"login":"solomonxie","id":14041622,"avatar_url":"https://avatars2.githubusercontent.com/u/14041622?v=4","gravatar_id":"","url":"https://api.github.com/users/solomonxie","html_url":"https://github.com/solomonxie","followers_url":"https://api.github.com/users/solomonxie/followers","following_url":"https://api.github.com/users/solomonxie/following{/other_user}","gists_url":"https://api.github.com/users/solomonxie/gists{/gist_id}","starred_url":"https://api.github.com/users/solomonxie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomonxie/subscriptions","organizations_url":"https://api.github.com/users/solomonxie/orgs","repos_url":"https://api.github.com/users/solomonxie/repos","events_url":"https://api.github.com/users/solomonxie/events{/privacy}","received_events_url":"https://api.github.com/users/solomonxie/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-06T07:47:56Z","updated_at":"2018-02-13T10:47:42Z","closed_at":null,"author_association":"OWNER","body":"- [x] 利用insomia或postman测试github api可行性\r\n- [x] python抓取某指定repo的所有issue\r\n- [x] 将指定repo下的所有issue保存到本地指定位置，并创建压缩包备份\r\n- [x] 设置config文件，把指定repo和user或存储位置等都放到config里面\r\n- [x] 下载多个repo下的所有issues，并分类存档好\r\n- [x] 测试、设计将本地的issues上建立git仓库，并与remote仓库的映射逻辑(用Bitbucket测试)\r\n- [x] 实现本地issues与remote的专门仓库的映射和自动push\r\n- [ ] 实现定时抓取，以及抓取的速度\r\n- [ ] 实现网络异常捕获，以及出错时的解决方案（跳过还是继续，还是重新开始）\r\n- [ ] 将脚本部署在服务器和树莓派\r\n- [ ] 定期将打包的文章发送到邮箱\r\n- [ ] 在issues生成的md基础上生成博客"}]